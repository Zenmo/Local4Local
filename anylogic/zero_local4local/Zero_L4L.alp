<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File
*************************************************
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.9.2.202410172110" AlpVersion="8.9.2">
<Model>
	<Id>1658477103134</Id>
	<Name><![CDATA[Zero_L4L]]></Name>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[zerol4l]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Hour]]></ModelTimeUnit>
	<OptionLists>
		<OptionList>
			<Id>1709718356700</Id>
			<Name><![CDATA[EnergyDemandTab]]></Name>
			<Option>
				<Id>1709718356702</Id>
				<Name><![CDATA[MOBILITY]]></Name>
			</Option>
			<Option>
				<Id>1709718356704</Id>
				<Name><![CDATA[ELECTRICITY]]></Name>
			</Option>
			<Option>
				<Id>1709718356706</Id>
				<Name><![CDATA[HEAT]]></Name>
			</Option>
			<Option>
				<Id>1714324722851</Id>
				<Name><![CDATA[HUB]]></Name>
			</Option>
			<Option>
				<Id>1721039647716</Id>
				<Name><![CDATA[NFATO]]></Name>
			</Option>
		</OptionList>
	</OptionLists>
	
	<Folders>
		
	</Folders>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1709049506453</Id>
			<Name><![CDATA[Loader_L4L]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_createInterface(){
	f_createInterface_L4L();
}
@Override
public void f_readDatabase(){
	f_readDatabase_L4L();
}
@Override
public void f_createGridConnections(){
	f_createGridConnections_L4L();
}

@Override
public void f_startUpLoader_default(){
	super.f_startUpLoader_default();
	f_startUpLoader_L4L();
}

@Override
public void f_addEnergyProduction(GridConnection parentGC, OL_EnergyAssetType asset_type, String asset_name, double installedPower_kW){
	f_addEnergyProduction_L4L(parentGC, asset_type, asset_name, installedPower_kW);
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
				<ClassName><![CDATA[Zero_Loader]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[zero_Interface]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_createGridnodeTimeSeries]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[genericProfiles_data]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[project_data]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[settings]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[user]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1709049506459</Id>
				<Name><![CDATA[1709049506459]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1709049506456</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1709049506460</CurrentLevel>
			<ConnectionsId>1709049506454</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1727355695113</Id>
					<Name><![CDATA[p_local4localBackendUrl]]></Name>
					<X>-980</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["https://local4local-backend.zenmo.com"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1727355695111</Id>
							<Label><![CDATA[p_local4localBackendUrl]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1727355695118</Id>
					<Name><![CDATA[p_local4localSession]]></Name>
					<X>-980</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["startPilot"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1727355695116</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726134544288</Id>
					<Name><![CDATA[f_createInterface_L4L]]></Name>
					<X>30</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//OVERRIDE THE zero_Interface parameter here
zero_Interface = interface_L4L;

//Set parameters/pointers in the interface and resultsUI
zero_Interface.energyModel = energyModel;
zero_Interface.uI_Results.energyModel = energyModel;
zero_Interface.p_selectedProjectType = project_data.project_type();
zero_Interface.settings = settings;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726150833775</Id>
					<Name><![CDATA[f_setGenericProfiles_data]]></Name>
					<X>-610</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Double> argumentsList = selectFrom( profiles ).list( profiles.t_h );

// Various demand profiles

List<Double> houseEdemandList = selectFrom( profiles ).list( profiles.house_e_demand_other );
List<Double> houseHDHWdemandList = selectFrom( profiles ).list( profiles.house_h_demand_hot_water );
List<Double> buildingEdemandList = selectFrom( profiles ).list( profiles.building_e_demand_other );
List<Double> buildingHeatDemandList = selectFrom( profiles ).list( profiles.building_h_demand );
List<Double> industrySteelEdemandList = selectFrom( profiles ).list( profiles.industry_steel_e_demand );
List<Double> industrySteelHdemandList = selectFrom( profiles ).list( profiles.industry_steel_h_demand );
List<Double> industryOtherEdemandList = selectFrom( profiles ).list( profiles.industry_other_e_demand );
List<Double> industryOtherHdemandList = selectFrom( profiles ).list( profiles.industry_other_h_demand );
List<Double> logisticsFleetEdemandList = selectFrom( profiles ).list( profiles.logistics_fleet_e_hgv );     
 
// Weather data
List<Double> windList = selectFrom( profiles ).list( profiles.wind_e_prod_normalized );
List<Double> solarList = selectFrom( profiles ).list( profiles.solar_e_prod_normalized );
List<Double> tempList = selectFrom( profiles ).list( profiles.ambient_temperature_deg_c );
List<Double> epexList = selectFrom( profiles ).list( profiles.day_ahead_price_eur_mwh ); 



//Create Profiles_data object
genericProfiles_data = Profiles_data.builder().
argumentsList(argumentsList).
houseEdemandList(houseEdemandList).
houseHDHWdemandList(houseHDHWdemandList).
buildingEdemandList(buildingEdemandList).
buildingHeatDemandList(buildingHeatDemandList).
industrySteelEdemandList(industrySteelEdemandList).
industrySteelHdemandList(industrySteelHdemandList).
industryOtherEdemandList(industryOtherEdemandList).
industryOtherHdemandList(industryOtherHdemandList).
logisticsFleetEdemandList(logisticsFleetEdemandList).
windList(windList).
solarList(solarList).
tempList(tempList).
epexList(epexList).build();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726156899337</Id>
					<Name><![CDATA[f_readDatabase_L4L]]></Name>
					<X>-700</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Set the profiles data record
f_setGenericProfiles_data();

//Set the GridNode data record
f_setGridNode_data();

//Set the consumption buildings data
f_setBuilding_data();

//Set the EA data

//Set the remaining gis object data
f_setNeighbourhood_data();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726157030630</Id>
					<Name><![CDATA[f_setBuilding_data]]></Name>
					<X>-610</X><Y>315</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[
//Get survey company buildings
List<Tuple> rowsSurveyCompanyBuildings = selectFrom(buildings).where(buildings.gc_id.ne("0")).where(buildings.gc_id.isNotEmpty()).list();		

for(Tuple row: rowsSurveyCompanyBuildings){
	//c_SurveyCompanyBuilding_data.add(f_buildingRecordBuilder(row));
}

//Get generic company buildings
//List<Tuple> rowsGenericCompanyBuildings = selectFrom(buildings).where(buildings.gc_id.eq("0")).where(buildings.gc_id.isEmpty()).list();		
List<Tuple> rowsGenericCompanyBuildings = selectFrom(buildings).list();		

for(Tuple row: rowsGenericCompanyBuildings){
	//c_GenericCompanyBuilding_data.add(f_buildingRecordBuilder(row));
}


//Get generic company buildings
List<Tuple> rowsHouseBuildings = selectFrom(buildings).where(buildings.purpose.contains("woonfunctie")).list();		

for(Tuple row: rowsHouseBuildings){
	c_HouseBuilding_data.add(f_buildingRecordBuilder(row));
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[Building_data]]></ReturnType>
					<Id>1726157131143</Id>
					<Name><![CDATA[f_buildingRecordBuilder]]></Name>
					<X>-585</X><Y>335</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[row]]></Name>
						<Type><![CDATA[Tuple]]></Type>
					</Parameter>
					<Body><![CDATA[//Create a building_data record
Building_data building_data_record = Building_data.builder().

address_id(row.get( buildings.address_id )).
building_id(row.get( buildings.building_id )).
pand_nr(row.get( buildings.pand_nr )).
pandcluster_nr(row.get( buildings.pandcluster_nr )).
streetname(row.get( buildings.streetname )).
house_number(row.get( buildings.house_number )).
house_letter(row.get( buildings.house_letter )).
house_addition(row.get( buildings.house_addition )).
postalcode(row.get( buildings.postalcode )).
city(row.get( buildings.city )).
build_year(row.get( buildings.build_year )).	
status(row.get( buildings.status )).
purpose(row.get( buildings.purpose )).
cumulative_floor_surface_m2(row.get( buildings.cumulative_floor_surface_m2 )).
polygon_area_m2(row.get( buildings.polygon_area_m2 )).
gc_id(row.get( buildings.gc_id )).
annotation(row.get( buildings.annotation )).
extra_info(row.get( buildings.extra_info )).
contracted_capacity_kw(row.get( buildings.contracted_capacity_kw )).
electricity_consumption_kwhpa(row.get( buildings.electricity_consumption_kwhpa )).
gas_consumption_kwhpa(row.get( buildings.gas_consumption_kwhpa )).
energy_label(row.get( buildings.energy_label )).
trafo_id(row.get( buildings.trafo_id )).
latitude(row.get( buildings.latitude )).
longitude(row.get( buildings.longitude )).
polygon(row.get( buildings.polygon )).build();

return building_data_record;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726221369773</Id>
					<Name><![CDATA[f_setGridNode_data]]></Name>
					<X>-610</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> rows = selectFrom(gridnodes).where(gridnodes.status).list();
		
for(Tuple row: rows){
	c_GridNode_data.add(GridNode_data.builder().
	
	trafo_id(row.get( gridnodes.gridnode_id )).
	fid(row.get( gridnodes.fid )).
	status(row.get( gridnodes.status )).
	type(row.get( gridnodes.type )).
	description(row.get( gridnodes.description )).
	latitude(row.get( gridnodes.latitude )).
	longitude(row.get( gridnodes.longitude )).
	parent_node_id(row.get( gridnodes.parent_node_id )).
	is_capacity_available(row.get( gridnodes.is_capacity_available )).
	capacity_kw(row.get( gridnodes.capacity_kw )).
	subscope(row.get( gridnodes.subscope )).
	service_area_polygon(row.get( gridnodes.service_area_polygon )).build());
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706089</Id>
					<Name><![CDATA[f_setCable_data]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-610</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//LV cables
List<Tuple> rowsLV = selectFrom(lv_cables).list();

for(Tuple rowLV : rowsLV){

c_Cable_data_LV.add(Cable_data.builder().	
	fid(rowLV.get(lv_cables.fid)).
	status(rowLV.get(lv_cables.status)).
	nominal_voltage_v(rowLV.get(lv_cables.nominal_voltage_v)).
	label(rowLV.get(lv_cables.label)).
	description(rowLV.get(lv_cables.description)).
	//latitude(rowLV.get(lv_cables.latitude)).
	//longitude(rowLV.get(lv_cables.longitude)).
	line(rowLV.get(lv_cables.line))
	.build());
}

//MV cables
List<Tuple> rowsMV = selectFrom(mv_cables).list();

for(Tuple rowMV : rowsMV){

c_Cable_data_MV.add(Cable_data.builder().	
	fid(rowMV.get(mv_cables.fid)).
	status(rowMV.get(mv_cables.status)).
	nominal_voltage_v(rowMV.get(mv_cables.nominal_voltage_v)).
	label(rowMV.get(mv_cables.label)).
	description(rowMV.get(mv_cables.description)).
	//latitude(rowMV.get(mv_cables.latitude)).
	//longitude(rowMV.get(mv_cables.longitude)).
	line(rowMV.get(mv_cables.line))
	.build());
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706091</Id>
					<Name><![CDATA[f_setSolarfarm_data]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-610</X><Y>407</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> rows = selectFrom(solarfarms).list();

for(Tuple row : rows){
		c_Solarfarm_data.add(Solarfarm_data.builder().
		
		gc_id(row.get(solarfarms.gc_id)).
		gc_name(row.get(solarfarms.gc_name)).
		owner_id(row.get(solarfarms.owner_id)).
		streetname(row.get(solarfarms.streetname)).
		house_number(row.get(solarfarms.house_number)).
		house_letter(row.get(solarfarms.house_letter)).
		house_addition(row.get(solarfarms.house_addition)).
		postalcode(row.get(solarfarms.postalcode)).
		city(row.get(solarfarms.city)).
		trafo_id(row.get(solarfarms.trafo_id)).
		initially_active(row.get(solarfarms.initially_active)).
		capacity_electric_kw(row.get(solarfarms.capacity_electric_kw)).
		connection_capacity_kw(row.get(solarfarms.connection_capacity_kw)).
		contracted_delivery_capacity_kw(row.get(solarfarms.contracted_delivery_capacity_kw)).
		contracted_feed_in_capacity_kw(row.get(solarfarms.contracted_feed_in_capacity_kw)).
		latitude(row.get(solarfarms.latitude)).
		longitude(row.get(solarfarms.longitude)).
		polygon(row.get(solarfarms.polygon))
		.build());
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706093</Id>
					<Name><![CDATA[f_setWindfarm_data]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-610</X><Y>427</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> rows = selectFrom(windfarms).list();

for(Tuple row : rows){
		c_Windfarm_data.add(Windfarm_data.builder().
		
		gc_id(row.get(windfarms.gc_id)).
		gc_name(row.get(windfarms.gc_name)).
		owner_id(row.get(windfarms.owner_id)).
		streetname(row.get(windfarms.streetname)).
		house_number(row.get(windfarms.house_number)).
		house_letter(row.get(windfarms.house_letter)).
		house_addition(row.get(windfarms.house_addition)).
		postalcode(row.get(windfarms.postalcode)).
		city(row.get(windfarms.city)).
		trafo_id(row.get(windfarms.trafo_id)).
		initially_active(row.get(windfarms.initially_active)).
		capacity_electric_kw(row.get(windfarms.capacity_electric_kw)).
		connection_capacity_kw(row.get(windfarms.connection_capacity_kw)).
		contracted_delivery_capacity_kw(row.get(windfarms.contracted_delivery_capacity_kw)).
		contracted_feed_in_capacity_kw(row.get(windfarms.contracted_feed_in_capacity_kw)).
		latitude(row.get(windfarms.latitude)).
		longitude(row.get(windfarms.longitude)).
		polygon(row.get(windfarms.polygon))
		.build());
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706095</Id>
					<Name><![CDATA[f_setElectrolyser_data]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-610</X><Y>446</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[		
List<Tuple> rows = selectFrom(electrolysers).list();

for(Tuple row : rows){
		c_Electrolyser_data.add(Electrolyser_data.builder().
		
		gc_id(row.get(electrolysers.gc_id)).
		gc_name(row.get(electrolysers.gc_name)).
		owner_id(row.get(electrolysers.owner_id)).
		streetname(row.get(electrolysers.streetname)).
		house_number(row.get(electrolysers.house_number)).
		house_letter(row.get(electrolysers.house_letter)).
		house_addition(row.get(electrolysers.house_addition)).
		postalcode(row.get(electrolysers.postalcode)).
		city(row.get(electrolysers.city)).
		trafo_id(row.get(electrolysers.trafo_id)).
		initially_active(row.get(electrolysers.initially_active)).
		capacity_electric_kw(row.get(electrolysers.capacity_electric_kw)).
		connection_capacity_kw(row.get(electrolysers.connection_capacity_kw)).
		contracted_delivery_capacity_kw(row.get(electrolysers.contracted_delivery_capacity_kw)).
		contracted_feed_in_capacity_kw(row.get(electrolysers.contracted_feed_in_capacity_kw)).
		
		default_operation_mode(OL_ElectrolyserOperationMode.valueOf(row.get(electrolysers.default_operation_mode))).
		conversion_efficiency(row.get(electrolysers.conversion_efficiency)).
		min_production_ratio(row.get(electrolysers.min_production_ratio)).
		idle_consumption_power_ratio(row.get(electrolysers.idle_consumption_power_ratio)).
		start_up_time_shutdown_s(row.get(electrolysers.start_up_time_shutdown_s)).
		start_up_time_standby_s(row.get(electrolysers.start_up_time_standby_s)).
		start_up_time_idle_s(row.get(electrolysers.start_up_time_idle_s)).
		load_change_time_s(row.get(electrolysers.load_change_time_s)).
		
		
		
		
		latitude(row.get(electrolysers.latitude)).
		longitude(row.get(electrolysers.longitude)).
		polygon(row.get(electrolysers.polygon))
		.build());
}	
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706097</Id>
					<Name><![CDATA[f_setBattery_data]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-610</X><Y>465</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> rows = selectFrom(batteries).list();

for(Tuple row : rows){
		c_Battery_data.add(Battery_data.builder().
		
		gc_id(row.get(batteries.gc_id)).
		gc_name(row.get(batteries.gc_name)).
		owner_id(row.get(batteries.owner_id)).
		streetname(row.get(batteries.streetname)).
		house_number(row.get(batteries.house_number)).
		house_letter(row.get(batteries.house_letter)).
		house_addition(row.get(batteries.house_addition)).
		postalcode(row.get(batteries.postalcode)).
		city(row.get(batteries.city)).
		trafo_id(row.get(batteries.trafo_id)).
		initially_active(row.get(batteries.initially_active)).
		
		
		capacity_electric_kw(row.get(batteries.capacity_electric_kw)).
		connection_capacity_kw(row.get(batteries.connection_capacity_kw)).
		contracted_delivery_capacity_kw(row.get(batteries.contracted_delivery_capacity_kw)).
		contracted_feed_in_capacity_kw(row.get(batteries.contracted_feed_in_capacity_kw)).
		
		storage_capacity_kwh(row.get(batteries.storage_capacity_kwh)).
		default_operation_mode(row.get(batteries.default_operation_mode)).
		latitude(row.get(batteries.latitude)).
		longitude(row.get(batteries.longitude)).
		polygon(row.get(batteries.polygon))
		.build());
}	]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706099</Id>
					<Name><![CDATA[f_setNeighbourhood_data]]></Name>
					<X>-610</X><Y>520</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> rows = selectFrom(neighbourhoods).list();
		
for(Tuple row: rows){
	c_Neighbourhood_data.add(Neighbourhood_data.builder().
	
	districtcode(row.get( neighbourhoods.districtcode )).
	districtname(row.get( neighbourhoods.districtname )).
	neighbourhoodcode(row.get( neighbourhoods.neighbourhoodcode )).
	neighbourhoodtype(row.get( neighbourhoods.neighbourhoodtype)).
	latitude(row.get( neighbourhoods.latitude )).
	longitude(row.get( neighbourhoods.longitude )).
	polygon(row.get( neighbourhoods.polygon )).build());
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706101</Id>
					<Name><![CDATA[f_setChargingstation_data]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-610</X><Y>485</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[List<Tuple> rows = selectFrom(chargingstations).list();

for(Tuple row : rows){
		c_Chargingstation_data.add(Chargingstation_data.builder().
		
		//Basic
		gc_id(row.get(chargingstations.gc_id)).
		gc_name(row.get(chargingstations.gc_name)).
		owner_id(row.get(chargingstations.owner_id)).
		streetname(row.get(chargingstations.streetname)).
		house_number(row.get(chargingstations.house_number)).
		house_letter(row.get(chargingstations.house_letter)).
		house_addition(row.get(chargingstations.house_addition)).
		postalcode(row.get(chargingstations.postalcode)).
		city(row.get(chargingstations.city)).
		trafo_id(row.get(chargingstations.trafo_id)).
		initially_active(row.get(chargingstations.initially_active)).
		
		//Specific
		connection_capacity_kw(row.get(chargingstations.connection_capacity_kw)).
		is_charging_centre(row.get(chargingstations.is_charging_centre)).
		vehicle_type(OL_EnergyAssetType.valueOf(row.get(chargingstations.vehicle_type))).
		number_of_chargers(row.get(chargingstations.number_of_chargers)).
		power_per_charger_kw(row.get(chargingstations.power_per_charger_kw)).

		//GIS
		latitude(row.get(chargingstations.latitude)).
		longitude(row.get(chargingstations.longitude)).
		polygon(row.get(chargingstations.polygon))
		.build());
}	
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177706103</Id>
					<Name><![CDATA[f_setParcel_data]]></Name>
					<X>-610</X><Y>540</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*
List<Tuple> rows = selectFrom(parcels).list();

for(Tuple row : rows){
	c_Parcel_data.add(Parcel_data.builder().
	
	parcel_id(row.get(parcels.parcel_id)).
	name(row.get(parcels.name)).
	streetname(row.get(parcels.streetname)).
	house_number(row.get(parcels.house_number)).
	house_letter(row.get(parcels.house_letter)).
	house_addition(row.get(parcels.house_addition)).
	postalcode(row.get(parcels.postalcode)).
	city(row.get(parcels.city)).
	polygon_area_m2(row.get(parcels.polygon_area_m2)).
	
	latitude(row.get(parcels.latitude)).
	longitude(row.get(parcels.longitude)).
	polygon(row.get(parcels.polygon))
	.build());
}
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727177860192</Id>
					<Name><![CDATA[f_setBuilding_data_AnderVoorbeeld]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-980</X><Y>320</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Loop to fill the different building type collections
List<Tuple> rows = selectFrom(buildings).list();

for(Tuple row : rows){

	//Survey companies
	if(row.get( buildings.gc_id ) != null && !row.get( buildings.gc_id ).equals("0") && !row.get( buildings.gc_id ).equals("")){
		c_SurveyCompanyBuilding_data.add(f_buildingRecordBuilder(row));
	}
	
	//Generic companies
	else if(row.get( buildings.gc_id )!= null && row.get( buildings.gc_id ).equals("0") && row.get(buildings.annotation) != null && !row.get(buildings.annotation).equals("woonfunctie")){
		c_GenericCompanyBuilding_data.add(f_buildingRecordBuilder(row));
	}
	
	//Houses
	else if(row.get( buildings.purpose ) != null && row.get( buildings.purpose ).contains("woonfunctie")){
		c_HouseBuilding_data.add(f_buildingRecordBuilder(row));
	}
	
	else{
		c_remainingBuilding_data.add(f_buildingRecordBuilder(row));
	}
}

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727351736798</Id>
					<Name><![CDATA[f_createGridConnections_L4L]]></Name>
					<X>-160</X><Y>180</Y>
					<Label><X>11</X><Y>1</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[f_createLocal4LocalPilot();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727353658120</Id>
					<Name><![CDATA[f_createLocal4LocalPilot]]></Name>
					<X>-980</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[var client = new nu.local4local.client.Client(p_local4localBackendUrl);
var pilot = client.getPilot(p_local4localSession);
var energyCoop = f_createLocal4LocalEnergyCoop();
energyCoop.p_bufferPrice_eurpMWh = pilot.getBufferPrice_eurpkWh()*1000;// == null ? 10 : pilot.getBufferPrice_eurpkWh()*1000;
energyCoop.p_feedinCompensation_eurpMWh = 1000*pilot.getSupplierCost().getFeedInCompensation_eurpkWh();
//energyCoop.p_feedinCompensation_eurpMWh = 20;
energyCoop.p_onbalansMarkup_r = pilot.getSupplierCost().getOnbalansMarkup_r();

f_createLocal4LocalWindFarms(pilot.getWindFarms(), energyCoop);
f_createLocal4LocalSolarFarms(pilot.getSolarFarms(), energyCoop);
f_createLocal4LocalBiogasGenerator(pilot.getBiogasGenerators(), energyCoop);

f_createLocal4LocalBatteries(pilot.getBatteries(), energyCoop);

f_createLocal4LocalHouseholds(pilot.getHouseholdGroups(), energyCoop);

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[EnergyCoopL4L]]></ReturnType>
					<Id>1727353658122</Id>
					<Name><![CDATA[f_createLocal4LocalEnergyCoop]]></Name>
					<X>-960</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[var energyCoop = new EnergyCoopL4L();
energyCoop.goToPopulation(energyModel.pop_energyCoops);
//energyModel.add_pop_energyCoops();

energyCoop.p_actorID = "coopHeibloem";
energyCoop.p_actorType = OL_ActorType.COOPENERGY;
energyCoop.p_gridOperator = energyModel.pop_gridOperators.get(0);

return energyCoop;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727353658124</Id>
					<Name><![CDATA[f_createLocal4LocalWindFarms]]></Name>
					<X>-960</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[windFarms]]></Name>
						<Type><![CDATA[List<nu.local4local.common.WindFarm>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[energyCoop]]></Name>
						<Type><![CDATA[EnergyCoopL4L]]></Type>
					</Parameter>
					<Body><![CDATA[
for (var windFarmData: windFarms) {
    
    //Grid
	GCEnergyProduction windFarm = energyModel.add_EnergyProductionSites();
		windFarm.set_p_gridConnectionID( "windFarm0" );
		windFarm.set_p_physicalConnectionCapacity_kW( windFarmData.getNominalPower_kW());
		windFarm.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	
	
	//Asset
	f_addEnergyProduction(
		windFarm, 
	    OL_EnergyAssetType.WINDMILL, 
	    "Windmill onshore",
	    windFarmData.getNominalPower_kW()
	);
	
	/*	f_addEnergyProduction(
		windFarm, 
	    OL_EnergyAssetType.GAS_BURNER , 
	    "Biogas Generator",
	    windFarmData.getNominalPower_kW()
	);*/
		
	//Owner
	ConnectionOwner	COWF = energyModel.add_pop_connectionOwners();
		COWF.p_actorID = windFarm.p_gridConnectionID + " coop";
		COWF.p_actorType = OL_ActorType.CONNECTIONOWNER;
		COWF.p_actorGroup = "production";
		COWF.p_connectionOwnerType = OL_ConnectionOwnerType.COOP;
	COWF.p_energyCoopID = energyCoop.p_actorID;
	
	windFarm.p_ownerID = COWF.p_actorID;
	
	//Cost item for kostprijs+
	
	Double CAPEX_eurpa = windFarmData.getCost().getCAPEX_eur()/10;
	Double OPEX_eurpa = windFarmData.getCost().getOPEX_eurpy();
	Double LCOE_eurpkWh = windFarmData.getCost().getLCOE_eurpkWH();
	Double SDEtariff_eurpKwh = windFarmData.getCost().getSdeSubsidy_eurpkWH();
	if (SDEtariff_eurpKwh == null){
		SDEtariff_eurpKwh = 0.0;//LCOE_eurpkWh;
	}
	Double interestRate_r = windFarmData.getCost().getInterest_r();
	Double depreciationPeriod_y = windFarmData.getCost().getDepreciationPeriod_y();
	
	//traceln("WINDFARM LCOE: %s", LCOE_eurpkWh);
	var costItem = new J_AssetCost(windFarm.c_productionAssets.get(windFarm.c_productionAssets.size()-1), CAPEX_eurpa, OPEX_eurpa, LCOE_eurpkWh, SDEtariff_eurpKwh, interestRate_r, depreciationPeriod_y);
	energyCoop.c_AssetCosts.add(costItem);
	this.interface_L4L.txt_windpark_power_value.setText(String.format("%s MW", windFarmData.getNominalPower_kW()/1000));
	this.interface_L4L.txt_windpark_expnd_power_value.setText(String.format("%s MW", windFarmData.getNominalPower_kW()/1000));
	this.interface_L4L.txt_windpark_expnd_LCOE_value.setText(String.format("%s €/kWh", LCOE_eurpkWh));
	this.interface_L4L.txt_windpark_expnd_SDESubsidy_value.setText(String.format("%s €/kWh", SDEtariff_eurpKwh));
	//this.interface_L4L.txt_windpark_expnd_totalProduction_value.setText(String.format("%s MWh/jaar", ___));
}
if (windFarms.size() == 0) {
	interface_L4L.grp_windpark_expnd.setVisible(false);
	interface_L4L.grp_windpark.setVisible(false);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727353658126</Id>
					<Name><![CDATA[f_createLocal4LocalHouseholds]]></Name>
					<X>-960</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[householdGroups]]></Name>
						<Type><![CDATA[List<nu.local4local.common.HouseholdGroup>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[energyCoop]]></Name>
						<Type><![CDATA[EnergyCoop]]></Type>
					</Parameter>
					<Body><![CDATA[for (int g = 0; g < householdGroups.size(); g++) {
	/*if (g > 0) {
	    throw new RuntimeException(
	        "More than 1 household group is not supported yet"
	        + "because of setting PV ratio per group"
	    );
	}*/

    var householdGroup = householdGroups.get(g);
    
//for (int g = 0; g < 3; g++) {

	//var householdGroup = householdGroups.get(0);
	
	for (int i = 1; i <= householdGroup.getHouseholds_n() ; i += 1) {
	//for (int i = 1; i <= 1 ; i += 1) {
		// Grid
		GCHouse gridHouse = energyModel.add_Houses();
			gridHouse.p_gridConnectionID = "house_" + g + "_" + i;
			gridHouse.set_p_heatingType( OL_GridConnectionHeatingType.GASBURNER);
			gridHouse.set_p_ownerID( gridHouse.p_gridConnectionID + "owner" );	
			gridHouse.set_p_physicalConnectionCapacity_kW( 17 );
			gridHouse.set_p_floorSurfaceArea_m2(100);
			gridHouse.v_dayTempSetpoint_degC = 20;
			gridHouse.v_nightTempSetpoint_degC = 17;
		
		// Owner
		ConnectionOwner	connectionOwner = energyModel.add_pop_connectionOwners();
			connectionOwner.p_actorID = gridHouse.p_ownerID;
			connectionOwner.p_actorType = OL_ActorType.CONNECTIONOWNER;
			connectionOwner.p_connectionOwnerType = OL_ConnectionOwnerType.HOUSEHOLD;
			connectionOwner.p_energyCoopID = energyCoop.p_actorID;
		
		//Asset
		f_addLocal4LocalHouseAssets(gridHouse, householdGroup, g*1000+i );
	}
	
	this.interface_L4L.c_householdGroups.add(householdGroup);
	this.interface_L4L.txt_households_value.setText(String.format("%s", householdGroup.getHouseholds_n()));
	this.interface_L4L.txt_households_expnd_value.setText(String.format("%s", householdGroup.getHouseholds_n()));
	this.interface_L4L.txt_households_expnd_hasPV_value.setText(String.format("%s"+" %%", roundToInt(householdGroup.getHasPV_r()*100)));
	this.interface_L4L.txt_households_expnd_hasHeatPump_value.setText(String.format("%s"+" %%", roundToInt(householdGroup.getHasHeatPump_r()*100)));
	this.interface_L4L.txt_households_expnd_hasChargePoint_value.setText(String.format("%s"+" %%", roundToInt(householdGroup.getHasChargePoint_r()*100)));
	this.interface_L4L.txt_housholds_expnd_annualBaseConsumption_value.setText(String.format("%s"+" kWh", roundToInt(householdGroup.getAnnualBaseConsumptionAvg_kWh())));
	
	if (householdGroup.getHasPV_r() <= 0) {
		this.interface_L4L.cb_includeFeedinInCoopProduction.setVisible(false);
	}
}
/*
if (householdGroups.size()==0) {
	interface_L4L.grp_households_expnd.setVisible(false);
	interface_L4L.grp_households.setVisible(false);
	//cb_includeFeedinInCoopProduction.setVisible(false);
}
*/

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1727353658128</Id>
					<Name><![CDATA[f_addLocal4LocalHouseAssets]]></Name>
					<X>-940</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[gcHouse]]></Name>
						<Type><![CDATA[GCHouse]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[householdGroupData]]></Name>
						<Type><![CDATA[nu.local4local.common.HouseholdGroup]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[seed]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[// Add electricity consumption profiles
//Random random = new Random(seed);

double yearlyDemandElectricity_kWh = householdGroupData.getAnnualBaseConsumptionAvg_kWh() * normal(0.2,1.0);
var newAsset = new J_EAConsumption(
	gcHouse,
	OL_EnergyAssetType.ELECTRICITY_DEMAND,
	"house_other_electricity_demand",
	yearlyDemandElectricity_kWh,
	OL_EnergyCarriers.ELECTRICITY,
	energyModel.p_timeStep_h,
	null
);

J_EABuilding buildingAsset = new J_EABuilding(
	gcHouse, 
	300,
	normal(50,1.57*200),
	energyModel.p_timeStep_h,
	normal(1, 17.9),
	normal(1e6,1e7),
	normal(1,2)
);

/*
// Solar Panel
if (random.nextDouble() <= householdGroupData.getHasPV_r()) {
	f_addEnergyProduction(
		gcHouse,
		OL_EnergyAssetType.PHOTOVOLTAIC,
		"Solar Panel",
		4);
};
*/

// HeatPump or Gasburner
/*if (random.nextDouble() <= householdGroupData.getHasHeatPump_r()) {
	new J_EAConversionHeatPump(
		gcHouse,
		zero_Interface.energyModel.p_timeStep_h,
		5, 0.5,
		zero_Interface.energyModel.v_currentAmbientTemperature_degC,
		60, "AIR", 0, 1);
} else {*/
	new J_EAConversionGasBurner(
		gcHouse,
		OL_EnergyAssetType.GAS_BURNER,
		50, 0.99,
		energyModel.p_timeStep_h, 90
	);
//};

// Electric or Fuel Car
/*if (random.nextDouble() <= householdGroupData.getHasChargePoint_r()) {
	double capacityElectric_kW = energyModel.avgc_data.p_avgEVMaxChargePowerCar_kW;
	double storageCapacity_kWh = energyModel.avgc_data.p_avgEVStorageCar_kWh;
	double initialStateOfCharge_r = 1.0;
	double energyConsumption_kWhpkm = energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;
	double vehicleScalingElectric = 1.0;
	
	new J_EAEV(gcHouse, capacityElectric_kW, storageCapacity_kWh,
		initialStateOfCharge_r, zero_Interface.energyModel.p_timeStep_h,
		energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_VEHICLE, null);  

} else { */
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(
		gcHouse,
		0.6, // energyConsumption_kWhpkm,
		energyModel.p_timeStep_h,
		1.0, // vehicleScaling
		OL_EnergyAssetType.DIESEL_VEHICLE,
		null);
//};

/*
// HomeBattery
if (random.nextDouble() <= householdGroupData.getHasHomeBattery_r()) {
	f_addStorage(
		gcHouse,
		2, //getPeakPower_kW(),
		4, //getCapacity_kWh(),
		OL_EnergyAssetType.STORAGE_ELECTRIC
	);
};*/


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1728318637132</Id>
					<Name><![CDATA[f_createLocal4LocalSolarFarms]]></Name>
					<X>-960</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[solarFarms]]></Name>
						<Type><![CDATA[List<nu.local4local.common.SolarFarm>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[energyCoop]]></Name>
						<Type><![CDATA[EnergyCoopL4L]]></Type>
					</Parameter>
					<Body><![CDATA[for (var solarFarmData: solarFarms) {
    //Grid
	GCEnergyProduction solarFarm = energyModel.add_EnergyProductionSites();
		solarFarm.set_p_gridConnectionID( "solarFarm_" + solarFarm.getId());
		solarFarm.set_p_physicalConnectionCapacity_kW( solarFarmData.getNominalPower_kW());
		solarFarm.set_p_heatingType( OL_GridConnectionHeatingType.NONE );
	
	//Solar Asset
	f_addEnergyProduction(
		solarFarm,
		OL_EnergyAssetType.PHOTOVOLTAIC,
		solarFarm.p_gridConnectionID,
		solarFarmData.getNominalPower_kW());
	
	//Owner
	ConnectionOwner	connectionOwner = energyModel.add_pop_connectionOwners();
		connectionOwner.p_actorID = "owner_" + connectionOwner.getId();
		connectionOwner.p_actorType = OL_ActorType.CONNECTIONOWNER;
		connectionOwner.p_actorGroup = "production";
		connectionOwner.p_connectionOwnerType = OL_ConnectionOwnerType.COOP;
		connectionOwner.p_energyCoopID = energyCoop.p_actorID;
		
	solarFarm.p_ownerID = connectionOwner.p_actorID;	
	
	//Cost item for kostprijs+

	Double CAPEX_eurpa = solarFarmData.getCost().getCAPEX_eur()/10;
	Double OPEX_eurpa = solarFarmData.getCost().getOPEX_eurpy();
	Double LCOE_eurpkWh = solarFarmData.getCost().getLCOE_eurpkWH();
	Double SDEtariff_eurpKwh = solarFarmData.getCost().getSdeSubsidy_eurpkWH();
	if (SDEtariff_eurpKwh == null){
		SDEtariff_eurpKwh = 0.0;//LCOE_eurpkWh;
	}
	Double interestRate_r = solarFarmData.getCost().getInterest_r();
	Double depreciationPeriod_y = solarFarmData.getCost().getDepreciationPeriod_y();
	
	var costItem = new J_AssetCost(solarFarm.c_productionAssets.get(solarFarm.c_productionAssets.size()-1), CAPEX_eurpa, OPEX_eurpa, LCOE_eurpkWh, SDEtariff_eurpKwh, interestRate_r, depreciationPeriod_y);
	energyCoop.c_AssetCosts.add(costItem);
	this.interface_L4L.txt_solarpark_power_value.setText(String.format("%s MW", solarFarmData.getNominalPower_kW()/1000));
	this.interface_L4L.txt_solarpark_expnd_power_value.setText(String.format("%s MW", solarFarmData.getNominalPower_kW()/1000));
	this.interface_L4L.txt_solarpark_expnd_LCOE_value.setText(String.format("%s €/kWh", LCOE_eurpkWh));
	this.interface_L4L.txt_solarpark_expnd_SDESubsidy_value.setText(String.format("%s €/kWh", SDEtariff_eurpKwh));
	//this.interface_L4L.txt_solarpark_expnd_totalProduction_value.setText(String.format("%s MWh/jaar", ___));
	
}
if (solarFarms.size() == 0) {
	interface_L4L.grp_solarpark_expnd.setVisible(false);
	interface_L4L.grp_solarpark.setVisible(false);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1728378028745</Id>
					<Name><![CDATA[f_createLocal4LocalBatteries]]></Name>
					<X>-960</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batteries]]></Name>
						<Type><![CDATA[List<nu.local4local.common.Battery>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[energyCoop]]></Name>
						<Type><![CDATA[EnergyCoopL4L]]></Type>
					</Parameter>
					<Body><![CDATA[    
for (var batteryData: batteries) {
	traceln("creating L4L battery!");
    //Owner
    ConnectionOwner connectionOwner = energyModel.add_pop_connectionOwners();
        connectionOwner.set_p_actorID( "battery_" + connectionOwner.getId());
        connectionOwner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );
        connectionOwner.set_p_connectionOwnerType( OL_ConnectionOwnerType.BATTERY_OP );
        connectionOwner.set_p_actorGroup("production");
        connectionOwner.p_energyCoopID = energyCoop.p_actorID;
    
    //GridConnection
    	GridBatteryL4L gridBattery = new GridBatteryL4L();
    	gridBattery.goToPopulation(energyModel.GridBatteries);
    //GCGridBattery gridBattery = energyModel.add_GridBatteries();
        gridBattery.set_p_gridConnectionID( "battery_" + gridBattery.getId() );
        gridBattery.set_p_ownerID( connectionOwner.p_actorID );
        gridBattery.set_p_owner( connectionOwner );
        gridBattery.set_p_physicalConnectionCapacity_kW( batteryData.getPeakPower_kW() );
        gridBattery.set_p_heatingType( OL_GridConnectionHeatingType.NONE );
        gridBattery.set_p_contractedFeedinCapacity_kW(batteryData.getPeakPower_kW() );
        gridBattery.set_p_contractedDeliveryCapacity_kW( batteryData.getPeakPower_kW() );
        gridBattery.set_p_batteryOperationMode(OL_BatteryOperationMode.BALANCE);
 
    //Battery Asset
    f_addStorage(gridBattery, batteryData.getPeakPower_kW(), batteryData.getCapacity_kWh(), OL_EnergyAssetType.STORAGE_ELECTRIC );
    //f_addStorage(gridBattery, 100, 100, OL_EnergyAssetType.STORAGE_ELECTRIC );
    
    //Cost item for kostprijs+
    /*Double CAPEX_eurpa = null; //solarFarmData.getCAPEX_eurpa();
	Double OPEX_eurpa = null; //solarFarmData.getOPEX_eurpa();
	Double LCOE_eurpkWh = 0.1; //solarFarmData.getLCOE_eurpkWh();
	var costItem = new J_AssetCost(gridBattery.c_productionAssets.get(gridBattery.c_productionAssets.size()-1), CAPEX_eurpa, OPEX_eurpa, LCOE_eurpkWh);
	energyCoop.c_costItems.add(costItem);*/
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1728981169338</Id>
					<Name><![CDATA[f_addEnergyProduction_L4L]]></Name>
					<X>810</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[parentGC]]></Name>
						<Type><![CDATA[GridConnection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[asset_type]]></Name>
						<Type><![CDATA[OL_EnergyAssetType]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[asset_name]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[installedPower_kW]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//String asset_name					= "Production Asset";
double capacityElectric_kW			= 0;
double capacityHeat_kW				= 0;
double yearlyProductionMethane_kWh 	= 0;
double yearlyProductionHydrogen_kWh = 0;
double timestep_h 					= energyModel.p_timeStep_h;
double outputTemperature_degC 		= 0;
J_ProfilePointer profilePointer = null;

switch (asset_type){

case PHOTOVOLTAIC: 
	//asset_name = "Solar Panels";
	profilePointer = energyModel.pp_solarPVproduction;
	capacityElectric_kW = installedPower_kW;
	//traceln("Installing PV for %s with power %s", parentGC.p_ownerID, capacityElectric_kW);
	
break;

case WINDMILL:
	//asset_name = "Windmill onshore";'
	profilePointer=energyModel.pp_windOnshoreProduction;
	capacityElectric_kW = installedPower_kW;
break;

case GAS_BURNER: 
	capacityElectric_kW = installedPower_kW;
	profilePointer=energyModel.f_findProfile("FLAT_PROFILE");
	traceln("Creating biogasGenerator asset!");
break;

case PHOTOTHERMAL: //NOT USED YET
	//asset_name = "PVT";
	capacityElectric_kW = installedPower_kW*0.5;//??????
	capacityHeat_kW	= installedPower_kW*0.5; // ????????
	outputTemperature_degC = 60; // ??????
break;
}

J_EAProduction production_asset = new J_EAProduction(parentGC, asset_type, asset_name, capacityElectric_kW , capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, timestep_h, outputTemperature_degC, profilePointer);
//return production_asset;
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1729690902199</Id>
					<Name><![CDATA[f_startUpLoader_L4L]]></Name>
					<X>60</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[interface_L4L.uI_Results.v_area = interface_L4L.uI_Results.v_collective;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1730293622188</Id>
					<Name><![CDATA[f_createLocal4LocalBiogasGenerator]]></Name>
					<X>-960</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[biogasGenerators]]></Name>
						<Type><![CDATA[List<nu.local4local.common.BiogasGenerator>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[energyCoop]]></Name>
						<Type><![CDATA[EnergyCoopL4L]]></Type>
					</Parameter>
					<Body><![CDATA[
for (var generatorData: biogasGenerators) {
    
    //Grid
	GCEnergyProduction biogasGeneratorSite = energyModel.add_EnergyProductionSites();
		biogasGeneratorSite.set_p_gridConnectionID( "biogasGenerator0" );
		biogasGeneratorSite.set_p_physicalConnectionCapacity_kW( generatorData.getPower_kW());
		biogasGeneratorSite.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	
	
	//Asset
	f_addEnergyProduction(
		biogasGeneratorSite, 
	    OL_EnergyAssetType.GAS_BURNER , 
	    "Biogas Generator",
	    generatorData.getPower_kW()
	);
	
	//Owner
	ConnectionOwner	COWF = energyModel.add_pop_connectionOwners();
		COWF.p_actorID = biogasGeneratorSite.p_gridConnectionID + " coop";
		COWF.p_actorType = OL_ActorType.CONNECTIONOWNER;
		COWF.p_actorGroup = "production";
		COWF.p_connectionOwnerType = OL_ConnectionOwnerType.COOP;
	COWF.p_energyCoopID = energyCoop.p_actorID;
	
	biogasGeneratorSite.p_ownerID = COWF.p_actorID;
	
	//Cost item for kostprijs+
	
	Double CAPEX_eurpa = generatorData.getCost().getCAPEX_eur()/10;
	Double OPEX_eurpa = generatorData.getCost().getOPEX_eurpy();
	Double LCOE_eurpkWh = generatorData.getCost().getLCOE_eurpkWH(); 
	Double SDEtariff_eurpKwh = generatorData.getCost().getSdeSubsidy_eurpkWH();
	if (SDEtariff_eurpKwh == null){
		SDEtariff_eurpKwh = 0.0;//LCOE_eurpkWh;
	}
	Double interestRate_r = generatorData.getCost().getInterest_r();
	Double depreciationPeriod_y = generatorData.getCost().getDepreciationPeriod_y();
	
	//traceln("WINDFARM LCOE: %s", LCOE_eurpkWh);
	var costItem = new J_AssetCost(biogasGeneratorSite.c_productionAssets.get(biogasGeneratorSite.c_productionAssets.size()-1), CAPEX_eurpa, OPEX_eurpa, LCOE_eurpkWh, SDEtariff_eurpKwh, interestRate_r, depreciationPeriod_y);
	energyCoop.c_AssetCosts.add(costItem);
	//this.interface_L4L.txt_assetPrefix_value1.setText(String.format("%s MW", windFarmData.getNominalPower_kW()/1000));
}
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1709049506454</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1726155991074</Id>
					<Name><![CDATA[startUp_L4L]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerol4l]]></PackageName>
						<ClassName><![CDATA[StartUp_L4L]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>
			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1726134503173</Id>
					<Name><![CDATA[interface_L4L]]></Name>
					<X>30</X><Y>750</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerol4l]]></PackageName>
						<ClassName><![CDATA[Interface_L4L]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[Interface_L4L]]></ClassName>
							<ItemName><![CDATA[1722364114820]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[t_scenario_current]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[t_scenario_2]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[t_scenario_3]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[t_scenario_XXX]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[t_scenario_custom]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[energyModel]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[map_centre_latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[map_centre_longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_selectedProjectType]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[settings]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[map_scale]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>XYZ</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1709049506460</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1722364114814</Id>
			<Name><![CDATA[Interface_L4L]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_projectSpecificSettings(){
	f_projectSpecificSettings_L4L();
}

@Override
public void f_setSliderPresets(){
	f_setSliderPresets_L4L();
}

@Override
public void f_projectSpecificStyling(){
	f_projectSpecificStyling_L4L();
}

@Override
public void f_setStartView() {
	f_setStartView_L4L();
}

@Override
public void f_updateUIresultsEnergyCoop(AreaCollection AC, EnergyCoop EC) {
	super.f_updateUIresultsEnergyCoop(AC, EC);
	f_updateUIresultsEnergyCoop_L4L(AC, EC);
}
/*
@Override
public void f_updateUIresultsMainArea(){
	super.f_updateUIresultsMainArea();
	f_L4Lfinances();
}*/]]></AdditionalClassCode>
			<Import><![CDATA[//Possibility to turn of traceln
import java.io.OutputStream;
import java.io.PrintStream;]]></Import>
			<ExtendsReference>
				<PackageName><![CDATA[zerointerfaceloader]]></PackageName>
				<ClassName><![CDATA[Zero_Interface]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[energyModel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[map_centre_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[map_centre_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_selectedProjectType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[settings]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[map_scale]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1722364114820</Id>
				<Name><![CDATA[1722364114820]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722412800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1722364114817</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1722364114821</CurrentLevel>
			<ConnectionsId>1722364114815</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1729677220922</Id>
					<Name><![CDATA[c_householdGroups]]></Name>
					<X>-260</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[List<nu.local4local.common.HouseholdGroup>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1730121494176</Id>
					<Name><![CDATA[b_includeFeedInInCoopProduction]]></Name>
					<X>-880</X><Y>930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1724419523225</Id>
					<Name><![CDATA[t_scenario_current]]></Name>
					<X>-1005</X><Y>85</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["Het huidige scenario bevat de energie dynamieken van dit moment. \n" +
"Dit omvat o.a. de huidige zonnepanelen op de daken van gebouwen, \n" +
"het aantal elektrische voertuigen, de energie- \n" + 
"consumptie van de panden, en de huidige gasconsumptie \n" + 
"voor verwarming."]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1724419523223</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>SEPARATE_SECTION</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724419523232</Id>
					<Name><![CDATA[t_scenario_2]]></Name>
					<X>-1000</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["WORDT NOG NIET ONDERSTEUND"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1724419523230</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724419604919</Id>
					<Name><![CDATA[t_scenario_3]]></Name>
					<X>-1000</X><Y>195</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["WORDT NOG NIET ONDERSTEUND"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1724419604917</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724419829732</Id>
					<Name><![CDATA[t_scenario_XXX]]></Name>
					<X>-1000</X><Y>245</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["WORDT NOG NIET ONDERSTEUND"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1724419829730</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1724420385230</Id>
					<Name><![CDATA[t_scenario_custom]]></Name>
					<X>-1000</X><Y>295</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[""]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1724420385228</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724417668993</Id>
					<Name><![CDATA[f_projectSpecificSettings_L4L]]></Name>
					<X>-670</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Project specific interface initialization settings

//Disable the default scenario buttons
rb_scenarios.setEnabled(false);
rb_scenarios.setVisible(false);

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724419523222</Id>
					<Name><![CDATA[f_setScenario_2]]></Name>
					<X>-1020</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[setScenario]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[
//Set the scenario text
t_scenarioDescription.setText(t_scenario_2);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724419535513</Id>
					<Name><![CDATA[f_setScenario_Current]]></Name>
					<X>-1020</X><Y>65</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[setScenario]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[for (UI_company companyUI : ui_companies){
	companyUI.getRb_scenariosPrivateUI().setValue(setScenario, true);
} 

//Set the scenario text
t_scenarioDescription.setText(t_scenario_current);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724419592217</Id>
					<Name><![CDATA[f_setScenario_3]]></Name>
					<X>-1020</X><Y>175</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[






//Set the scenario text
t_scenarioDescription.setText(t_scenario_3);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1724419810437</Id>
					<Name><![CDATA[f_setScenario_XXX]]></Name>
					<X>-1020</X><Y>225</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[




//Set the scenario text
t_scenarioDescription.setText(t_scenario_XXX);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1725976724055</Id>
					<Name><![CDATA[f_setSliderPresets_L4L]]></Name>
					<X>-280</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int group = 0;
List<GCHouse> c_housesInGroup = new ArrayList<>();

for (var g : c_householdGroups) {

	for (var house : energyModel.Houses) {
		if (house.p_gridConnectionID.contains(String.format("house_" + group))){
			c_housesInGroup.add(house);
		}
	}
	traceln("Houses in group %s: %s", g, c_housesInGroup.size());

	f_setPVSystemHousesPerGroup(g.getHasPV_r() * 100, c_housesInGroup);
	   
	f_setHeatingSystemsHouseholds(g.getHasHeatPump_r() * 100, c_housesInGroup);  
	
	f_setElectricCars(g.getHasChargePoint_r() * 100, c_housesInGroup);
	
	if (g.getHasHomeBattery_r() > 0.0) {
	    traceln(RED, "Home battery not supported yet");
	}
	
	group++;
	c_housesInGroup.clear();
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726068824384</Id>
					<Name><![CDATA[f_projectSpecificStyling_L4L]]></Name>
					<X>-670</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Project specific styling

//Interface colors
v_themeColor = new Color(208, 208, 245);
v_backgroundColor = white;

//Grid node sizes
v_HVMVNodeSize = 100;
v_MVMVNodeSize = 50;
v_MVLVNodeSize = 20;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1728976867915</Id>
					<Name><![CDATA[f_L4Lfinances]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>-649</X><Y>945</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[EnergyCoop EC = energyModel.pop_energyCoops.get(0);
double [] annualElectricityBalanceArray_kW = EC.acc_annualElectricityBalance_kW.getTimeSeries();
double [] annualOwnProductionArray_kW = EC.acc_annualOwnElectricityProduction_kW.getTimeSeries();

int arrayLength = annualElectricityBalanceArray_kW.length;

// Get effective average LCOE from costItems.
double assetAvgLCOE_eurpMWh = 0; //100; // 10.4ct/kWh, best duur! (dit is voor zonnepark 
int nbCostItems = loader_L4L.c_costItems.size();
double totalProduction_kWh = 0;
double totalCost_eur = 0;

for (var ci : loader_L4L.c_costItems) {
	assetAvgLCOE_eurpMWh += 1000*ci.getLCOE_eurpkWh() / (double) nbCostItems;	
	//totalCost_eur += ci.getLCOE_eurpkWh() * -ci.getEnergyAsset().getEnergyUsed_kWh();
	//totalProduction_kWh += -ci.getEnergyAsset().getEnergyUsed_kWh();
	//traceln("Energy produced or costitem: %s kWh", -ci.getEnergyAsset().getEnergyUsed_kWh());
}
//double assetAvgLCOE_eurpMWh = totalCost_eur / totalProduction_kWh * 1000;
traceln("Average LCOE of own assets: %s", assetAvgLCOE_eurpMWh);

// Bufferprice, hardcoded for now.
double bufferCost_eurpMWh = 20; // 2ct/kWh additional costs, retail, IT, platforms, etc.

// Initialize totals at 0.0
double SDEincome_eur = 0; // SDE++ subsidie meerekenen? Dwz. invoersubsidie wanneer marktprijs lager is dan ...ct/kWh. 
double EPEXcosts_eur = 0;
double EPEXincome_eur = 0;
double selfConsumptionCoopAssets_MWh = 0; // The part of the 'owned' production that is delivered to customers (as opposed to sold on market)


for (int i=0; i<arrayLength; i++) { // Loop over all timesteps for the relevant arrays.
	// Loop through coop nett power to calculate yearly money to EPEX
	EPEXcosts_eur += max(0,annualElectricityBalanceArray_kW[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	EPEXincome_eur += max(0,-annualElectricityBalanceArray_kW[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	
	// SDE subsidie voor alle stroom van eigen opwekassets: (exclusief opwek bij klanten)
	SDEincome_eur += annualOwnProductionArray_kW[i]/1000 * energyModel.p_timeStep_h * max(0,assetAvgLCOE_eurpMWh-energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i));
	
	// Opwek van eigen productie assets die geleverd wordt aan klanten:
	selfConsumptionCoopAssets_MWh += max(0,annualOwnProductionArray_kW[i] - max(0,-annualElectricityBalanceArray_kW[i]))*energyModel.p_timeStep_h/1000;
}

double totalOwnElectricityProduced_MWh = EC.acc_annualOwnElectricityProduction_kW.getSum()  * energyModel.p_timeStep_h / 1000;

double totalDeliveredElec_MWh = EC.v_totalElectricitySelfConsumed_MWh + EC.v_electricityImported_kWh/1000; // v_totalElectricitySelfConsumed_MWh includes feed-in from customers that is re-delivered. However, it's only delivery, not feed-in! (Niet gesaldeerd)
double customerFeedIn_MWh = EC.v_electricityExported_kWh/1000 + totalDeliveredElec_MWh - totalOwnElectricityProduced_MWh - EC.v_electricityImported_kWh/1000; // This should include all the energy that is received from customers!
double nettDeliveredElec_MWh = totalDeliveredElec_MWh - customerFeedIn_MWh; // 

double kostprijs_eurpMWh = assetAvgLCOE_eurpMWh - SDEincome_eur / totalOwnElectricityProduced_MWh; // Neem aan dat de cooperatie dit bedrag ook krijgt voor niet-gelijktijdig geleverde stroom!
double kostprijsPlus_eurpMWh = kostprijs_eurpMWh + bufferCost_eurpMWh;
//double EPEXbalance_eur = EPEXincome_eur - EPEXcosts_eur; // positive balance means nett-income!

// Leveranciersprijs
//double EDVcosts_eur = (kostprijs_eurpMWh + bufferCost_eurpMWh) * (totalOwnElectricityProduced_MWh + customerFeedIn_MWh ) + EPEXcosts_eur ; 
double EDVcosts_eur = kostprijs_eurpMWh * ( totalOwnElectricityProduced_MWh + customerFeedIn_MWh ) + EPEXcosts_eur + totalDeliveredElec_MWh * bufferCost_eurpMWh; 
double leveranciersprijs_eurpMWh = (EDVcosts_eur - EPEXincome_eur - kostprijsPlus_eurpMWh * EC.v_totalElectricitySelfConsumed_MWh )/(totalDeliveredElec_MWh - EC.v_totalElectricitySelfConsumed_MWh); // Zorg dat EDV break-even draait

// Gemiddelde leveringsprijs
double gemiddeldeLeveringsprijs_eurpMWh = ( kostprijsPlus_eurpMWh * EC.v_totalElectricitySelfConsumed_MWh + leveranciersprijs_eurpMWh * (totalDeliveredElec_MWh - EC.v_totalElectricitySelfConsumed_MWh) ) / totalDeliveredElec_MWh;
//double leveranciersprijs_eurpMWh = 
double EDVincome_eur = (kostprijs_eurpMWh + bufferCost_eurpMWh) * EC.v_totalElectricitySelfConsumed_MWh + EPEXincome_eur + (totalDeliveredElec_MWh - EC.v_totalElectricitySelfConsumed_MWh) * leveranciersprijs_eurpMWh;
//totalDeliveredElec_MWh = nettDeliveredElec_MWh; // Assume that nettDelivered is what counts for finances, such that feed-in tarrif is accounted for!

traceln("Totale opwek Coöperatie Assets: %s MWh, tarief: %s €/MWh, waarde: %s €", totalOwnElectricityProduced_MWh, kostprijs_eurpMWh, totalOwnElectricityProduced_MWh*kostprijs_eurpMWh); // Also need production from own assets only!
traceln("Gelijktijdige opwek en verbruik (incl zelfverbruik teruglevering van leden): %s MWh", EC.v_totalElectricitySelfConsumed_MWh);
traceln("Gelijktijdige opwek en verbruik (excl zelfverbruik teruglevering van leden): %s MWh, tarief: %s €/MWh, waarde: %s €", selfConsumptionCoopAssets_MWh, kostprijs_eurpMWh+bufferCost_eurpMWh, selfConsumptionCoopAssets_MWh * (kostprijs_eurpMWh+bufferCost_eurpMWh));
traceln("Ongelijktijdige levering: %s MWh, tarief: %s €/MWh, waarde: %s €", totalDeliveredElec_MWh-EC.v_totalElectricitySelfConsumed_MWh, leveranciersprijs_eurpMWh, leveranciersprijs_eurpMWh*(totalDeliveredElec_MWh-EC.v_totalElectricitySelfConsumed_MWh));
traceln("Totale inkoop op EPEX: %s MWh, tarief: %s €/MWh, value: %s €", EC. v_electricityImported_kWh/1000, EPEXcosts_eur/(EC.v_electricityImported_kWh/1000), EPEXcosts_eur);
traceln("Totale verkoop op EPEX: %s MWh, tarief: %s €/MWh, value: %s €", EC.v_electricityExported_kWh/1000, EPEXincome_eur/(EC.v_electricityExported_kWh/1000), EPEXincome_eur);

traceln("Totale levering aan klanten: %s MWh, tarief: %s €/MWh, waarde: %s €", roundToDecimal(totalDeliveredElec_MWh,2), gemiddeldeLeveringsprijs_eurpMWh, gemiddeldeLeveringsprijs_eurpMWh*totalDeliveredElec_MWh);

traceln("Totale teruglevering van klanten: %s MWh, tarief: %s €/MWh, waarde: %s €", customerFeedIn_MWh, kostprijs_eurpMWh, customerFeedIn_MWh*kostprijs_eurpMWh);

traceln("Coop gelijktijdigheid: fractie van eigen opwek geleverd aan leden: %s", selfConsumptionCoopAssets_MWh/totalOwnElectricityProduced_MWh);
//traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-energyModel.v_totalElectricityExport_MWh/totalOwnElectricityProduced_MWh); // Kan negatief worden!
traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-EC.v_electricityExported_kWh/1000/totalOwnElectricityProduced_MWh); // Kan negatief worden!

traceln("Kostprijs+ met SDE verrekend: %s €/MWh", roundToInt(kostprijs_eurpMWh + bufferCost_eurpMWh));
traceln("Gemiddelde leveringsprijs: %s €/MWh", roundToInt( gemiddeldeLeveringsprijs_eurpMWh ));
traceln("Leveranciersprijs ongelijktijdige stroom: %s €/MWh", roundToInt(leveranciersprijs_eurpMWh) );

traceln("SDE++ income: %s €", SDEincome_eur);
traceln("EDV total income: %s €", roundToInt(EDVcosts_eur));
traceln("EDV total costs: %s €", roundToInt(EDVincome_eur));

if (abs(EDVcosts_eur-EDVincome_eur) > 1) {
	traceln("Coop not running break-even!!");
	traceln("Coop total income: %s €", EDVcosts_eur);
	traceln("Coop total costs: %s €", EDVincome_eur);
}


]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1729514906826</Id>
					<Name><![CDATA[f_setStartView_L4L]]></Name>
					<X>-490</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//ui_Results_presentation_group.setX(-1850);
//ui_Results_presentation_group.setY(1200);

gr_uI_Results_presentation.setX(-1850);
gr_uI_Results_presentation.setY(+1200);

//uI_Results.gr_radioButtons.setVisible(false);
// uI_Results.v_selectedChartType = OL_ChartTypes.DIAGRAM;
//uI_Results.f_setSelectedChartType(1); //Diagram
//uI_Results.f_showCorrectChart();

//uI_Results.f_setRadioButtons(null,null,false);
uI_Results.f_setChartProfiles_Presentation(null,null,false);

uI_Results.f_setChartGelijktijdigheid_Presentation(null,null,true);
uI_Results.chartGelijktijdigheid.f_setCharts();

//uI_Results.f_setChartBalans_Presentation(null,null,true);
//uI_Results.chartBalans.f_setCharts();


//uI_Results.chartBalans.f_disableRadioButtons();


this.viewAreaL4L.navigateTo();

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[J_CoopReport]]></ReturnType>
					<Id>1729602576425</Id>
					<Name><![CDATA[f_getCoopReport]]></Name>
					<X>-880</X><Y>900</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[var energyCoop = this.energyModel.pop_energyCoops.get(0);
var local4localCoop = (EnergyCoopL4L) energyCoop;

if ( b_includeFeedInInCoopProduction ) {
	return local4localCoop.v_coopReportIncludeFeedinInOwnConsumption;
} else {
	return local4localCoop.v_coopReport;
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1729692082502</Id>
					<Name><![CDATA[f_updateUIresultsEnergyCoop_L4L]]></Name>
					<X>-650</X><Y>690</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[area]]></Name>
						<Type><![CDATA[AreaCollection]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[EC]]></Name>
						<Type><![CDATA[EnergyCoop]]></Type>
					</Parameter>
					<Body><![CDATA[if (b_includeFeedInInCoopProduction) {
	area.v_totalElectricitySelfConsumed_MWh = ((EnergyCoopL4L)EC).v_totalElectricitySelfConsumed_MWh;
	area.fm_totalImports_MWh.put(OL_EnergyCarriers.ELECTRICITY, EC.fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY));
	area.fm_totalExports_MWh.put(OL_EnergyCarriers.ELECTRICITY, EC.fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY));
} else {
	area.v_totalElectricitySelfConsumed_MWh = ((EnergyCoopL4L)EC).v_selfConsumptionCoopAssets_MWh;
	area.fm_totalImports_MWh.put(OL_EnergyCarriers.ELECTRICITY, EC.fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY) + EC.v_totalElectricitySelfConsumed_MWh  - area.v_totalElectricitySelfConsumed_MWh);
	area.fm_totalExports_MWh.put(OL_EnergyCarriers.ELECTRICITY, EC.fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY) + EC.v_totalElectricitySelfConsumed_MWh  - area.v_totalElectricitySelfConsumed_MWh);
}
double ratioGenerationDelivery = (area.v_totalElectricitySelfConsumed_MWh + area.fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY)) / ( area.v_totalElectricitySelfConsumed_MWh + area.fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY));
if ( ratioGenerationDelivery > 1.5 ) {
	grp_balanceWarning.setVisible(true);
}
//area.v_annualElectricityExport_MWh = EC.v_electricityExported_kWh/1000;
//area.v_annualSelfConsumedElectricity_MWh = EC.v_totalElectricitySelfConsumed_MWh;

double solarFarmProduction_MWh=0;
double windFarmProduction_MWh=0;
EC= (EnergyCoopL4L)energyModel.pop_energyCoops.get(0);
for (J_AssetCost ci : ((EnergyCoopL4L)EC).c_AssetCosts ) {
	if (ci.energyAsset().energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC ) {
		solarFarmProduction_MWh += ci.getTotalProduction_MWh();
	}
	
	if (ci.energyAsset().energyAssetType == OL_EnergyAssetType.WINDMILL ) {
		windFarmProduction_MWh += ci.getTotalProduction_MWh();
	}
}

txt_solarpark_expnd_totalProduction_value.setText(roundToInt(solarFarmProduction_MWh) + " MWh/jaar");
txt_windpark_expnd_totalProduction_value.setText(roundToInt(windFarmProduction_MWh) + " MWh/jaar");

]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732191169845</Id>
					<Name><![CDATA[f_setPVSystemHousesPerGroup]]></Name>
					<Description><![CDATA[Function that adds or removes photovoltaic production assets to houses. Takes a percentage as a parameter and runs untill that percentage of all the houses has a PV asset. If a new asset is created it takes as its electric capacity a random value between 3 and 6 kW. The variables for amount of installed PV are updated automatically in the zero_engine.
]]></Description>
					<X>-260</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[PV_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[c_housesInGroup]]></Name>
						<Type><![CDATA[List<GCHouse>]]></Type>
					</Parameter>
					<Body><![CDATA[//Update variable to change to custom scenario
if(!b_runningMainInterfaceScenarios){
	b_changeToCustomScenario = true;
}


double nbHousesWithPV = count(c_housesInGroup, x -> x.v_hasPV == true);

if( PV_pct /100.0 < nbHousesWithPV / c_housesInGroup.size() ){
	while ( PV_pct / 100.0 * energyModel.Houses.size() < nbHousesWithPV ) { // remove excess PV systems
		GridConnection house = findFirst(c_orderedPVSystems, x -> x.v_hasPV == true && c_housesInGroup.contains(x));		
		J_EA pvAsset = findFirst(house.c_productionAssets, p -> p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );
		if (pvAsset != null) {
			pvAsset.removeEnergyAsset();
			c_orderedPVSystems.remove( house) ;
			c_orderedPVSystems.add(0, house) ;
			nbHousesWithPV --; 
		}
		else {
			traceln(" cant find PV asset in house that should have PV asset in f_setPVHouses (Interface)");
		}
	}
 
}
else {
	while ( PV_pct / 100.0 > nbHousesWithPV / c_housesInGroup.size()) {
		GridConnection house = findFirst(c_orderedPVSystems, x -> x.v_hasPV == false && c_housesInGroup.contains(x));
		if (house == null){
			traceln("No gridconnection without PV panels found! Current PVsystems count: %s", nbHousesWithPV);
			break;
		}
		else {
			String assetName = "Rooftop PV";
			double capacityHeat_kW = 0.0;
			double yearlyProductionHydrogen_kWh = 0.0;
			double yearlyProductionMethane_kWh = 0.0;
			double outputTemperature_degC = 0.0;
			double installedPVCapacity_kW = uniform(3,6);

			J_EAProduction productionAsset = new J_EAProduction ( house, OL_EnergyAssetType.PHOTOVOLTAIC, assetName, installedPVCapacity_kW, capacityHeat_kW, yearlyProductionMethane_kWh, yearlyProductionHydrogen_kWh, energyModel.p_timeStep_h, outputTemperature_degC, energyModel.pp_solarPVproduction );
			c_orderedPVSystems.remove(house);
			c_orderedPVSystems.add(0, house);
			energyModel.v_totalInstalledPVPower_kW += installedPVCapacity_kW;
			nbHousesWithPV ++;	
		}
	}
}

f_resetSettings();]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732191223404</Id>
					<Name><![CDATA[f_setHeatingSystemsHouseholds]]></Name>
					<Description><![CDATA[Function that adds or removes heatpumps to houses. Takes a percentage as a parameter and runs untill that percentage of all the houses has a heatpump. If a new heatpump is created it determines its heat demand on a heat_demand consumption asset if it exists, else it looks for a heat profile asset.]]></Description>
					<X>-260</X><Y>739</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[targetHeatPump_pct]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[c_housesInGroup]]></Name>
						<Type><![CDATA[List<GCHouse>]]></Type>
					</Parameter>
					<Body><![CDATA[//Update variable to change to custom scenario
if(!b_runningMainInterfaceScenarios){
	b_changeToCustomScenario = true;
}

double nbHeatPumps = count(c_housesInGroup, house -> house.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);
int targetHeatPumpAmount = roundToInt( targetHeatPump_pct / 100.0 *(c_housesInGroup.size()));

if( targetHeatPumpAmount < nbHeatPumps){
	while ( targetHeatPumpAmount < nbHeatPumps) { // remove excess heatpumps, replace with gasburners.
		GridConnection gc = findFirst(c_orderedHeatingSystemsHouses, x->x.p_primaryHeatingAsset instanceof J_EAConversionHeatPump && c_housesInGroup.contains(x));
		if (gc != null) {
			J_EA heatPump = gc.p_primaryHeatingAsset;
			heatPump.removeEnergyAsset();
			nbHeatPumps --;
			c_orderedHeatingSystemsHouses.remove(gc);
			c_orderedHeatingSystemsHouses.add(0, gc);
			 
			// In loader: f_addEnergyAssetsToHouses staat jaarlijks gasverbruik in else???
			J_EAConsumption heatDemandAsset = findFirst(gc.c_consumptionAssets, j_ea->j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
			J_EAConversionGasBurner gasBurner;
			if (heatDemandAsset != null) {
				gasBurner = new J_EAConversionGasBurner(gc, OL_EnergyAssetType.GAS_BURNER, heatDemandAsset.yearlyDemand_kWh/8760*10, 0.99, energyModel.p_timeStep_h, 90);
			}
			else {
				J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(gc.c_profileAssets, x->x instanceof J_EAProfile && x.energyCarrier == OL_EnergyCarriers.HEAT);
				double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -> new RuntimeException());
				gasBurner = new J_EAConversionGasBurner(gc, OL_EnergyAssetType.GAS_BURNER, peakHeatDemand_kW, 0.99, energyModel.p_timeStep_h, 90);
			}	
			gc.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;		
		}
	}
 
} 
else { 
	while ( targetHeatPumpAmount > nbHeatPumps) { // remove gasburners, add heatpumps.
		GCHouse gc = (GCHouse)findFirst(c_orderedHeatingSystemsHouses, x -> x.p_primaryHeatingAsset instanceof J_EAConversionGasBurner && c_housesInGroup.contains(x));
		if (gc != null) {			
			gc.p_primaryHeatingAsset.removeEnergyAsset();
			J_EAConversionHeatPump heatPump;
			J_EAConsumption heatDemandAsset = findFirst(gc.c_consumptionAssets, j_ea -> j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);
			if (heatDemandAsset != null) { // als house een standaard warmtebehoefte profiel heeft
				heatPump = new J_EAConversionHeatPump(gc, energyModel.p_timeStep_h, heatDemandAsset.yearlyDemand_kWh/8760*10 / 3, 0.5, energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
				
			} 
			else if (gc.p_BuildingThermalAsset != null){ //als huis een building heatmodel heeft
				heatPump = new J_EAConversionHeatPump(gc, energyModel.p_timeStep_h, 5, 0.5, energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
				//J_EAStorageHeat buffer = new J_EAStorageHeat(gc, OL_EAStorageTypes.HEATBUFFER, 10, 0, energyModel.p_timeStep_h, 75, 15, 90, 50, 50000, "AIR" );
				//Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType 
				//voeg heatbuffer toe
			}
			else { //anders moet het huis een heatProfiel krijgen
				J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(gc.c_profileAssets, x->x instanceof J_EAProfile && x.energyCarrier == OL_EnergyCarriers.HEAT);
				double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -> new RuntimeException());
				heatPump = new J_EAConversionHeatPump(gc, energyModel.p_timeStep_h, peakHeatDemand_kW / 3, 0.5, energyModel.v_currentAmbientTemperature_degC, 60, "AIR", 0, 1);
			}
			nbHeatPumps ++;
			c_orderedHeatingSystemsHouses.remove(gc);
			c_orderedHeatingSystemsHouses.add(0, gc);
			gc.p_heatingType = OL_GridConnectionHeatingType.HEATPUMP_AIR;
		} 
		else {
			traceln("No more gasburners to replace!");
			break;
		}	
	}	
}]]></Body>
				</Function>
				<Function AccessType="protected" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732191252688</Id>
					<Name><![CDATA[f_setElectricCars]]></Name>
					<Description><![CDATA[Function that adds or removes electric cars to gridconnections. Takes a percentage as a parameter and runs untill that percentage of all the cars is an electric car. If a new electric car is created it gets its characteristics from the AVGC data and keeps the triptracker from the fossil car. The function also updates the sliders in the company UI.]]></Description>
					<X>-260</X><Y>759</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[pctEVsGoal]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[c_housesInGroup]]></Name>
						<Type><![CDATA[List<GCHouse>]]></Type>
					</Parameter>
					<Body><![CDATA[//Update variable to change to custom scenario
if(!b_runningMainInterfaceScenarios){
	b_changeToCustomScenario = true;
}
int v_totalNumberOfGhostVehicle_Cars = 0;
int nbEVsCurrent = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE && !(p.getParentAgent() instanceof GCPublicCharger) && ((GridConnection)p.getParentAgent()).v_isActive && c_housesInGroup.contains(p.getParentAgent()) ) + v_totalNumberOfGhostVehicle_Cars;
int nbDieselCarsCurrent = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE && ((GridConnection)p.getParentAgent()).v_isActive  && c_housesInGroup.contains(p.getParentAgent()) );
int nbEVsGoal = roundToInt((nbEVsCurrent + nbDieselCarsCurrent)*pctEVsGoal/100.0);

//Remember how much vehicles there are initially
int total_vehicles = nbEVsCurrent + nbDieselCarsCurrent;

if( nbEVsCurrent > nbEVsGoal){
	while ( nbEVsCurrent > nbEVsGoal && nbEVsCurrent > 0) { // remove excess EVs systems !!!! Should also add diesel vehicle again!
		J_EAEV ev = (J_EAEV)findFirst(c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE && ((GridConnection)p.getParentAgent()).v_isActive  && c_housesInGroup.contains(p.getParentAgent()));
		if (ev!=null) {
			//traceln("Found eTrucks: " + ev);
			GridConnection gc = (GridConnection)ev.getParentAgent();
			
			// update UI company
			UI_company companyUI = null;
			boolean isAdditionalVehicle = false;
			/*
		    if (zero_Interface.c_companyUIs.size()>0){
				companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
				if (companyUI != null && companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC
					
					int ghostCars = 0;
					if(gc.v_hasQuarterHourlyValues){
						ghostCars = companyUI.v_minEVCarSlider;
					}
					
					int nbGCEVs = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE) + ghostCars;
					int nbGCDieselCars = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);
					if (companyUI.v_minEVCarSlider >= nbGCEVs) {
						traceln("Removed already existing Electric Car from GC: " + companyUI.p_companyName);
					}
					else {
						companyUI.sl_electricCarsCompany.setValue(nbGCEVs-1, false);
						companyUI.v_nbEVCars--;
						companyUI.sl_dieselCarsCompany.setValue(nbGCDieselCars+1, false);
						companyUI.v_nbDieselCars++;
					}
					companyUI.rb_scenariosPrivateUI.setValue(2, false);
				}
				if(companyUI != null){
					for(GridConnection GC: companyUI.c_ownedGridConnections){
						if(companyUI.c_additionalVehicles.get(GC).contains(ev)){
							companyUI.c_additionalVehicles.get(GC).remove(ev);
							isAdditionalVehicle = true;		
						}
					}
				}
			}
		    */
			J_ActivityTrackerTrips tripTracker = ev.tripTracker;
			boolean available = true;
			available = ev.getAvailability();
			c_orderedVehicles.remove(ev);
			ev.removeEnergyAsset();
			//traceln("Removing EV from gridConnection:" + GC.p_gridConnectionID);
		
			// Re-add diesel vehicle
			double energyConsumption_kWhpkm = energyModel.avgc_data.p_avgDieselConsumptionCar_kWhpkm;
			double vehicleScaling = 1.0;	
			J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_VEHICLE, tripTracker);
			dieselVehicle.available = available;
			
			c_orderedVehicles.add(0, dieselVehicle);	
				
			//check if was additional vehicle in companyUI, if so: add to collection
			/*if(companyUI != null && isAdditionalVehicle){
				companyUI.c_additionalVehicles.get(gc).add(dieselVehicle);
			}*/
			
			nbEVsCurrent--;
			nbDieselCarsCurrent++;
		}
		else{//No more vehicles to adjust: this is the minimum: set slider to minimum and do nothing else
				int total_electricCars = count(energyModel.f_getEnergyAssets(), p->p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE && !(p.getParentAgent() instanceof GCPublicCharger)  && ((GridConnection)p.getParentAgent()).v_isActive && c_housesInGroup.contains(p.getParentAgent()) ) + v_totalNumberOfGhostVehicle_Cars;
				int min_pct_electricCarSlider = roundToInt(100.0*total_electricCars/total_vehicles);
				//sliderElectricCars.setValue(min_pct_electricCarSlider, false);
				//sliderFFCars.setValue(100-min_pct_electricCarSlider, false);
			return;
		}
	} 
} else { 
	while ( nbEVsCurrent < nbEVsGoal && nbDieselCarsCurrent > 0) {
		// Remove diesel vehicle
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(c_orderedVehicles, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE && ((GridConnection)p.getParentAgent()).v_isActive && c_housesInGroup.contains(p.getParentAgent()) );
		//traceln("Found diesel vehicle: " + dieselVehicle);
		if (dieselVehicle!=null) {
			GridConnection gc = (GridConnection)dieselVehicle.getParentAgent();
			
			
			// update UI company
			/*UI_company companyUI = null;
			boolean isAdditionalVehicle = false;
			if (zero_Interface.c_companyUIs.size()>0){
				companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);
				if (companyUI != null && companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC
					
					int ghostCars = 0;
					if(gc.v_hasQuarterHourlyValues){
						ghostCars = companyUI.v_minEVCarSlider;
					}
					
					int nbGCEVs = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE) + ghostCars;
					int nbGCDieselCars = count(gc.c_vehicleAssets, p -> p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);
					companyUI.sl_electricCarsCompany.setValue(nbGCEVs+1, false);
					companyUI.v_nbEVCars++;
					companyUI.sl_dieselCarsCompany.setValue(nbGCDieselCars-1, false);
					companyUI.v_nbDieselCars--;
					companyUI.rb_scenariosPrivateUI.setValue(2, false);
				}
				if(companyUI != null){
					for(GridConnection GC: companyUI.c_ownedGridConnections){
						if(companyUI.c_additionalVehicles.get(GC).contains(dieselVehicle)){
							companyUI.c_additionalVehicles.get(GC).remove(dieselVehicle);
							isAdditionalVehicle = true;
						}
					}
				}
			}*/
			
			J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;
			boolean available = true;
			available = dieselVehicle.getAvailability();
			c_orderedVehicles.remove(dieselVehicle);
			dieselVehicle.removeEnergyAsset();
			//traceln("Removing household DIESEL VEHICLE from household:" + GC.p_gridConnectionID);

			double capacityElectric_kW = energyModel.avgc_data.p_avgEVMaxChargePowerCar_kW;
			double storageCapacity_kWh = energyModel.avgc_data.p_avgEVStorageCar_kWh;
			double initialStateOfCharge_r = 1.0;
			double energyConsumption_kWhpkm = energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;
			double vehicleScalingElectric = 1.0;
			J_EAEV ev = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_r, energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_VEHICLE, tripTracker);  
			ev.available = available;
			
			c_orderedVehicles.add(0, ev);	

			//check if was additional vehicle in companyUI, if so: add to collection
			/*if(companyUI != null && isAdditionalVehicle){
				companyUI.c_additionalVehicles.get(gc).add(ev);
			}*/
			
			nbEVsCurrent++;
			nbDieselCarsCurrent--;
		}
	}
	
}	

//traceln("%s diesel cars and %s EVs: ", nbDieselCarsCurrent, nbEVsCurrent);
f_resetSettings();]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1722364114815</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1726153692344</Id>
					<Name><![CDATA[loader_L4L]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerol4l]]></PackageName>
						<ClassName><![CDATA[Loader_L4L]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
				<ContainerLink>
					<Id>1726155991076</Id>
					<Name><![CDATA[startUp_L4L]]></Name>
					<X>150</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerol4l]]></PackageName>
						<ClassName><![CDATA[StartUp_L4L]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1722364114821</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1730899851125</Id>
					<Name><![CDATA[rct_header_bg]]></Name>
					<X>-1940</X><Y>960</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>0</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1940</Width>
					<Height>130</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-657931</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Oval>
					<Id>1730900136677</Id>
					<Name><![CDATA[ovl_gemiddeld_tarief]]></Name>
					<X>-390</X><Y>1825</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-2131369518</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Circle>false</Circle>
					<RadiusX>120</RadiusX>
					<RadiusY>60</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-3896</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Image>
					<Id>1730899198924</Id>
					<Name><![CDATA[img_logo_L4L]]></Name>
					<X>-1930</X><Y>990</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>234.013</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[L4L_LOGO.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>true</OriginalSize>
				</Image>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1724415643323</Id>
					<Name><![CDATA[rb_scenarios_L4L]]></Name>
					<X>20</X><Y>145</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="380" Height="135">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[//Set selected scenario string
String selected_scenario = "";

//Disable traceln
PrintStream originalPrintStream = f_disableTraceln();

switch(rb_scenarios_L4L.getValue()){
	
	case 0:
		selected_scenario = "2024: huidige situatie";
		f_setScenario_Current(rb_scenarios_L4L.getValue());

	break;
	
	case 1: // ???
		selected_scenario = "???? : NOG NIET WERKEND!!!!";
		f_setScenario_XXX();
	break;
	
	case 2:
		selected_scenario = "Custom";
		t_scenarioDescription.setText(t_scenario_custom);
	break;
	
	default:
		traceln("Unsupported scenario selected");
}

//Enable traceln
f_enableTraceln(originalPrintStream);

//Set scenario name text to the correct scenario
t_scenarioName.setText("Scenario: " + selected_scenario);
traceln("Selected scenario: \"" + selected_scenario + "\"");]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[2024: huidige situatie]]></Button>
						<Button><![CDATA[????]]></Button>
						<Button><![CDATA[Custom]]></Button>
						<LinkTo>false</LinkTo>
					</ExtendedProperties>
				</Control>
				<Group>
					<Id>1729595620037</Id>
					<Name><![CDATA[table]]></Name>
					<X>-600</X><Y>1610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1729592417619</Id>
					<Name><![CDATA[rect_eigen_opwek]]></Name>
					<X>-480</X><Y>-80</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>310</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1729583313003</Id>
					<Name><![CDATA[txt_eigen_opwek]]></Name>
					<X>-460</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Eigen opwek]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1729592523184</Id>
					<Name><![CDATA[rect_gelijktijdig]]></Name>
					<X>-480</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>310</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592540802</Id>
					<Name><![CDATA[rect_ongelijktijdig]]></Name>
					<X>-480</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>310</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592545046</Id>
					<Name><![CDATA[rect_som]]></Name>
					<X>-480</X><Y>70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>310</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1729592553502</Id>
					<Name><![CDATA[txt_gelijktijdig]]></Name>
					<X>-460</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gelijktijdige levering]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729592559444</Id>
					<Name><![CDATA[txt_ongelijktijdig]]></Name>
					<X>-460</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Ongelijktijdige levering]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729592562951</Id>
					<Name><![CDATA[txt_som]]></Name>
					<X>-460</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Totale levering]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Rectangle>
					<Id>1729592598510</Id>
					<Name><![CDATA[rect_energievolume]]></Name>
					<X>-170</X><Y>-130</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592602399</Id>
					<Name><![CDATA[rect_tarief]]></Name>
					<X>0</X><Y>-130</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592605582</Id>
					<Name><![CDATA[rect_totaalwaarde]]></Name>
					<X>170</X><Y>-130</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1729592610489</Id>
					<Name><![CDATA[txt_energievolume]]></Name>
					<X>-10</X><Y>-115</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Energievolume]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729592614031</Id>
					<Name><![CDATA[txt_tarief]]></Name>
					<X>160</X><Y>-115</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Tarief]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729592616978</Id>
					<Name><![CDATA[txt_totaalwaarde]]></Name>
					<X>330</X><Y>-115</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Totaalwaarde]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Rectangle>
					<Id>1729592823487</Id>
					<Name><![CDATA[rectangle7]]></Name>
					<X>-170</X><Y>-80</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592823489</Id>
					<Name><![CDATA[rectangle8]]></Name>
					<X>-170</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592823491</Id>
					<Name><![CDATA[rectangle9]]></Name>
					<X>-170</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592823493</Id>
					<Name><![CDATA[rectangle10]]></Name>
					<X>-170</X><Y>70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592832385</Id>
					<Name><![CDATA[rectangle11]]></Name>
					<X>0</X><Y>-80</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592832387</Id>
					<Name><![CDATA[rect_kostprijs_plus]]></Name>
					<X>0</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592832389</Id>
					<Name><![CDATA[rectangle13]]></Name>
					<X>0</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592832391</Id>
					<Name><![CDATA[rect_gemiddeld_tarief]]></Name>
					<X>0</X><Y>70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592835401</Id>
					<Name><![CDATA[rectangle15]]></Name>
					<X>170</X><Y>-80</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592835403</Id>
					<Name><![CDATA[rectangle16]]></Name>
					<X>170</X><Y>-30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592835405</Id>
					<Name><![CDATA[rectangle17]]></Name>
					<X>170</X><Y>20</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1729592835407</Id>
					<Name><![CDATA[rectangle18]]></Name>
					<X>170</X><Y>70</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>170</Width>
					<Height>50</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1729595334291</Id>
					<Name><![CDATA[eigen_opwek1]]></Name>
					<X>-10</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().ownProduction().printQuantity_MWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595390819</Id>
					<Name><![CDATA[eigen_opwek2]]></Name>
					<X>-10</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().selfConsumption().printQuantity_MWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595394342</Id>
					<Name><![CDATA[eigen_opwek3]]></Name>
					<X>-10</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().nonsimultaneousDelivery().printQuantity_MWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595397213</Id>
					<Name><![CDATA[eigen_opwek4]]></Name>
					<X>-10</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().totalDelivery().printQuantity_MWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595402132</Id>
					<Name><![CDATA[txt_gemiddeld_tarief]]></Name>
					<X>160</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gemiddeld tarief]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().totalDelivery().printPrice_eurpMWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595404286</Id>
					<Name><![CDATA[eigen_opwek6]]></Name>
					<X>160</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().nonsimultaneousDelivery().printPrice_eurpMWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595408033</Id>
					<Name><![CDATA[txt_kostprijs_plus]]></Name>
					<X>160</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kostprijs+]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().selfConsumption().printPrice_eurpMWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595410451</Id>
					<Name><![CDATA[eigen_opwek8]]></Name>
					<X>160</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().ownProduction().printPrice_eurpMWh()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595413931</Id>
					<Name><![CDATA[eigen_opwek9]]></Name>
					<X>330</X><Y>-65</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().ownProduction().printTotalPrice_eur()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595416383</Id>
					<Name><![CDATA[eigen_opwek10]]></Name>
					<X>330</X><Y>-15</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().selfConsumption().printTotalPrice_eur()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595420144</Id>
					<Name><![CDATA[eigen_opwek11]]></Name>
					<X>330</X><Y>35</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().nonsimultaneousDelivery().printTotalPrice_eur()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1729595426227</Id>
					<Name><![CDATA[eigen_opwek12]]></Name>
					<X>330</X><Y>85</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[something]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().totalDelivery().printTotalPrice_eur()]]></TextCode>
					<Font>
						<Name>Calibri</Name>
						<Size>24</Size>
						<Style>2</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Line>
					<Id>1730903418199</Id>
					<Name><![CDATA[ln_table_vertical]]></Name>
					<X>-480</X><Y>-110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>250</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1730903418209</Id>
					<Name><![CDATA[ln_table_horizontal]]></Name>
					<X>370</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-1</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>-570</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
			</Presentation>

				</Group>
				<Group>
					<Id>1729672318520</Id>
					<Name><![CDATA[grp_solarpark]]></Name>
					<X>-660</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[grp_solarpark_expnd.setVisible(true);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1729672102524</Id>
					<Name><![CDATA[rrect_solarpark]]></Name>
					<X>-190</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>380</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1331</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1729672116692</Id>
					<Name><![CDATA[img_solarpark]]></Name>
					<X>-180</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>80</Width>
					<Height>80</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[noun-solarfarm.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1729672163807</Id>
					<Name><![CDATA[txt_solarpark_title]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zonnepark]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>36</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672191145</Id>
					<Name><![CDATA[txt_solarpark_power]]></Name>
					<X>-80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vermogen:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672237346</Id>
					<Name><![CDATA[txt_solarpark_power_value]]></Name>
					<X>50</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MW]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1729672325154</Id>
					<Name><![CDATA[grp_windpark]]></Name>
					<X>-260</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[grp_windpark_expnd.setVisible(true);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1729672325156</Id>
					<Name><![CDATA[rrect_windpark]]></Name>
					<X>-190</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>380</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-2031617</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1729672325158</Id>
					<Name><![CDATA[img_windpark]]></Name>
					<X>-180</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>80</Width>
					<Height>80</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[noun-windmill.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1729672325160</Id>
					<Name><![CDATA[txt_windpark_title]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Windpark]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>36</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672325162</Id>
					<Name><![CDATA[txt_windpark_power]]></Name>
					<X>-80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vermogen:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672325164</Id>
					<Name><![CDATA[txt_windpark_power_value]]></Name>
					<X>50</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MW]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1729672367443</Id>
					<Name><![CDATA[grp_windpark_expnd]]></Name>
					<X>-260</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[//grp_windpark_expnd.setVisible(false);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1729672367445</Id>
					<Name><![CDATA[rrect_windpark_expnd]]></Name>
					<X>-190</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>380</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1638401</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1729672367447</Id>
					<Name><![CDATA[img_windpark_expnd]]></Name>
					<X>-180</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>80</Width>
					<Height>80</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[noun-windmill.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1729672367449</Id>
					<Name><![CDATA[txt_windpark_expnd_title]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Windpark]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>36</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672367451</Id>
					<Name><![CDATA[txt_windpark_expnd_power]]></Name>
					<X>-80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vermogen:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730728362930</Id>
					<Name><![CDATA[txt_windpark_expnd_LCOE]]></Name>
					<X>-180</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kosten per kWh (LCOE):]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730728411875</Id>
					<Name><![CDATA[txt_windpark_expnd_LCOE_value]]></Name>
					<X>30</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ €/kWh]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672367453</Id>
					<Name><![CDATA[txt_windpark_expnd_power_value]]></Name>
					<X>50</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MW]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730729764811</Id>
					<Name><![CDATA[txt_windpark_expnd_SDESubsidy]]></Name>
					<X>-180</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[SDE Subsidietarief:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730729782713</Id>
					<Name><![CDATA[txt_windpark_expnd_totalProduction]]></Name>
					<X>-180</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Opwek per jaar:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730729807577</Id>
					<Name><![CDATA[txt_windpark_expnd_totalProduction_value]]></Name>
					<X>-50</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MWh/jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730729828768</Id>
					<Name><![CDATA[txt_windpark_expnd_SDESubsidy_value]]></Name>
					<X>-20</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ €/kWh]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1729672425523</Id>
					<Name><![CDATA[grp_households]]></Name>
					<X>-1060</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[grp_households_expnd.setVisible(true);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1729672425525</Id>
					<Name><![CDATA[rrect_households]]></Name>
					<X>-190</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>380</Width>
					<Height>100</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1729672425527</Id>
					<Name><![CDATA[img_households]]></Name>
					<X>-180</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>80</Width>
					<Height>80</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[noun-house.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1729672425529</Id>
					<Name><![CDATA[txt_households_title]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>36</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672425531</Id>
					<Name><![CDATA[txt_households]]></Name>
					<X>-80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aantal:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1729672425533</Id>
					<Name><![CDATA[txt_households_value]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Text>
					<Id>1729673052333</Id>
					<Name><![CDATA[txt_title]]></Name>
					<X>-950</X><Y>1015</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Coöperatiedashboard]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>56</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1729673517119</Id>
					<Name><![CDATA[txt_graph_title]]></Name>
					<X>-1630</X><Y>1115</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gelijktijdigheid
Opwek en Levering]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>36</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1729690631528</Id>
					<Name><![CDATA[txt_table_title]]></Name>
					<X>-600</X><Y>1420</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kostenoverzicht]]></Text>
					<Font>
						<Name>Calibri</Name>
						<Size>36</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1729690744518</Id>
					<Name><![CDATA[txt_kostprijs_plus_highlight]]></Name>
					<X>-845</X><Y>1900</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kostprijs+]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1729690755597</Id>
					<Name><![CDATA[txt_gemiddeld_tarief_highlight]]></Name>
					<X>-390</X><Y>1900</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gemiddeld leveringstarief voor klant
(excl. belastingen en vastrecht)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1729690783826</Id>
					<Name><![CDATA[txt_gemiddeld_tarief_value]]></Name>
					<X>-390</X><Y>1805</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Gemiddeld tarief]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().totalDelivery().printPrice_ctpkWh()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>30</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="CheckBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1730119914285</Id>
					<Name><![CDATA[cb_includeFeedinInCoopProduction]]></Name>
					<X>-1250</X><Y>1345</Y>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="440" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[b_includeFeedInInCoopProduction = cb_includeFeedinInCoopProduction.isSelected(); 
f_getCoopReport(); 
f_updateUIresultsEnergyCoop_L4L(uI_Results.v_collective, this.energyModel.pop_energyCoops.get(0)); 
//uI_Results.f_setSelectedChartType(1); //Diagram
//uI_Results.f_showCorrectChart();

uI_Results.chartGelijktijdigheid.f_setCharts();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="14" Style="1"/>
						<LabelText><![CDATA[Teruglevering klanten als cooperatie-opwek beschouwen]]></LabelText>
						<DefaultValueCode><![CDATA[false]]></DefaultValueCode>
						<LinkTo>false</LinkTo>
	 				</ExtendedProperties>
				</Control>
				<Group>
					<Id>1730730050427</Id>
					<Name><![CDATA[grp_solarpark_expnd]]></Name>
					<X>-660</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[//grp_solarpark_expnd.setVisible(false);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1730730050429</Id>
					<Name><![CDATA[rrect__solarpark_expnd]]></Name>
					<X>-190</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>380</Width>
					<Height>200</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-26</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1730730050431</Id>
					<Name><![CDATA[img__solarpark_expnd]]></Name>
					<X>-180</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>80</Width>
					<Height>80</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[noun-solarfarm.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1730730050433</Id>
					<Name><![CDATA[txt_solarpark_expnd_title]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Zonnepark]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>36</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730050435</Id>
					<Name><![CDATA[txt_solarpark_expnd_power]]></Name>
					<X>-80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Vermogen:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730050437</Id>
					<Name><![CDATA[txt_solarpark_expnd_power_value]]></Name>
					<X>50</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MW]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730091293</Id>
					<Name><![CDATA[txt_solarpark_expnd_LCOE]]></Name>
					<X>-170</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kosten per kWh (LCOE):]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730091295</Id>
					<Name><![CDATA[txt_solarpark_expnd_LCOE_value]]></Name>
					<X>40</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ €/kWh]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730091297</Id>
					<Name><![CDATA[txt_solarpark_expnd_SDESubsidy]]></Name>
					<X>-170</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[SDE Subsidietarief:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730091299</Id>
					<Name><![CDATA[txt_solarpark_expnd_totalProduction]]></Name>
					<X>-170</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Opwek per jaar:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730091301</Id>
					<Name><![CDATA[txt_solarpark_expnd_totalProduction_value]]></Name>
					<X>-40</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MWh/jaar]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730091303</Id>
					<Name><![CDATA[txt_solarpark_expnd_SDESubsidy_value]]></Name>
					<X>-10</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ €/kWh]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Group>
					<Id>1730730115139</Id>
					<Name><![CDATA[grp_households_expnd]]></Name>
					<X>-1060</X><Y>1160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[//grp_households_expnd.setVisible(false);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1730730115141</Id>
					<Name><![CDATA[rrect_households_expnd]]></Name>
					<X>-190</X><Y>-50</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>380</Width>
					<Height>220</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Image>
					<Id>1730730115143</Id>
					<Name><![CDATA[img_households_expnd]]></Name>
					<X>-180</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>80</Width>
					<Height>80</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[noun-house.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Text>
					<Id>1730730115145</Id>
					<Name><![CDATA[txt_households_expnd_title]]></Name>
					<X>-80</X><Y>-40</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Huishoudens]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>36</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730115147</Id>
					<Name><![CDATA[txt_households_expnd]]></Name>
					<X>-80</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aantal:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730115149</Id>
					<Name><![CDATA[txt_households_expnd_value]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730196671</Id>
					<Name><![CDATA[txt_households_expnd_hasPV]]></Name>
					<X>-180</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aandeel met zonnepanelen:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730219101</Id>
					<Name><![CDATA[txt_households_expnd_hasHeatPump]]></Name>
					<X>-180</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aandeel met warmtepomp:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730237382</Id>
					<Name><![CDATA[txt_households_expnd_hasChargePoint]]></Name>
					<X>-180</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Aandeel met laadpaal:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730248533</Id>
					<Name><![CDATA[txt_housholds_expnd_annualBaseConsumption]]></Name>
					<X>-180</X><Y>140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Jaarlijks huishoudelijk verbruik:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730280723</Id>
					<Name><![CDATA[txt_households_expnd_hasPV_value]]></Name>
					<X>50</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ %]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730294289</Id>
					<Name><![CDATA[txt_households_expnd_hasHeatPump_value]]></Name>
					<X>40</X><Y>80</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ %]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730303189</Id>
					<Name><![CDATA[txt_households_expnd_hasChargePoint_value]]></Name>
					<X>10</X><Y>110</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ %]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1730730315596</Id>
					<Name><![CDATA[txt_housholds_expnd_annualBaseConsumption_value]]></Name>
					<X>80</X><Y>140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[___ MWh]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>18</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Group>
				<Line>
					<Id>1730898907817</Id>
					<Name><![CDATA[ln_header]]></Name>
					<X>-1920</X><Y>1090</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8355712</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>1900</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1730898950049</Id>
					<Name><![CDATA[ln_content1]]></Name>
					<X>-1320</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-2894893</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>830</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1730898967934</Id>
					<Name><![CDATA[ln_content2]]></Name>
					<X>-1290</X><Y>1400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-2894893</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>1250</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Image>
					<Id>1729672999597</Id>
					<Name><![CDATA[img_logo_Zenmo]]></Name>
					<X>-220</X><Y>1000</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>157.5</Width>
					<Height>72.5</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[logo_zenmo.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
				<Oval>
					<Id>1730900093424</Id>
					<Name><![CDATA[ovl_kostprijs_plus]]></Name>
					<X>-845</X><Y>1825</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>3</LineWidth>
					<LineColor>-2132344858</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Circle>false</Circle>
					<RadiusX>120</RadiusX>
					<RadiusY>60</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-2951726</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Text>
					<Id>1729690775737</Id>
					<Name><![CDATA[txt_kostprijs_plus_value]]></Name>
					<X>-845</X><Y>1805</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Kostprijs+]]></Text>
					<TextCode><![CDATA[this.f_getCoopReport().selfConsumption().printPrice_eurpMWh()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>30</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Group>
					<Id>1730998285479</Id>
					<Name><![CDATA[grp_balanceWarning]]></Name>
					<X>-1720</X><Y>1440</Y>
					<Label><X>7.559</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<OnClickCode><![CDATA[grp_balanceWarning.setVisible(false);]]></OnClickCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<RoundedRectangle>
					<Id>1730998285481</Id>
					<Name><![CDATA[rrect_households_expnd1]]></Name>
					<X>-143.631</X><Y>-140</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>1806.732</Width>
					<Height>660</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>10</ArcRadius>
				</RoundedRectangle>
				<Text>
					<Id>1730998285485</Id>
					<Name><![CDATA[txt_households_expnd_title1]]></Name>
					<X>755.955</X><Y>-49.872</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Let op!

Je energiegemeenschap heeft een groot overschot aan opwek.
Breng je gemeenschap in balans door meer klanten toe te voegen 
of door minder opwekvermogen toe te kennen aan je energiegemeenschap

Het kostenoverzicht is nu waarschijnlijk niet representatief.]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>48</Size>
						<Style>1</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
			</Presentation>
			<Areas>
				<Area>
					<Id>1722364205380</Id>
					<Name><![CDATA[viewAreaL4L]]></Name>
					<X>-1930</X><Y>990</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Title><![CDATA[]]></Title>
					<Width>1920</Width>
					<Height>980</Height>
				</Area>
			</Areas>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1726154250910</Id>
			<Name><![CDATA[StartUp_L4L]]></Name>
			<StartupCode><![CDATA[f_startModel();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1726154250916</Id>
				<Name><![CDATA[1726154250916]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1726214400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1726154250913</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1726154250917</CurrentLevel>
			<ConnectionsId>1726154250911</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1726226738858</Id>
					<Name><![CDATA[project_name]]></Name>
					<X>60</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["L4L"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726226738856</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738861</Id>
					<Name><![CDATA[map_centre_latitude]]></Name>
					<X>60</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[51.58668326]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726226738859</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738864</Id>
					<Name><![CDATA[map_centre_longitude]]></Name>
					<X>60</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[4.753102438]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726226738862</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738867</Id>
					<Name><![CDATA[grid_operator]]></Name>
					<X>60</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["Enexis"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726226738865</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738870</Id>
					<Name><![CDATA[energy_coop]]></Name>
					<X>60</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738868</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738873</Id>
					<Name><![CDATA[energy_supplier]]></Name>
					<X>60</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738871</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738876</Id>
					<Name><![CDATA[total_electricity_consumption_companies_kWh_p_yr]]></Name>
					<X>60</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738874</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738879</Id>
					<Name><![CDATA[avg_electricity_consumption_house_kWh_p_yr]]></Name>
					<X>60</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738877</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738882</Id>
					<Name><![CDATA[avg_gas_consumption_house_m3_p_yr]]></Name>
					<X>60</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738880</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738885</Id>
					<Name><![CDATA[total_gas_consumption_companies_m3_p_yr]]></Name>
					<X>60</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738883</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738888</Id>
					<Name><![CDATA[total_cars_houses]]></Name>
					<X>60</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Integer]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738886</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738891</Id>
					<Name><![CDATA[total_trucks_companies]]></Name>
					<X>60</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Integer]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738889</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738897</Id>
					<Name><![CDATA[total_vans_companies]]></Name>
					<X>60</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Integer]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726226738895</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738900</Id>
					<Name><![CDATA[project_type]]></Name>
					<X>60</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_ProjectType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_ProjectType.RESIDENTIAL]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726226738898</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726226738903</Id>
					<Name><![CDATA[survey_type]]></Name>
					<X>60</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[OL_SurveyType]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[OL_SurveyType.ZORM]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726226738901</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726230154997</Id>
					<Name><![CDATA[hasCongestionPricing]]></Name>
					<X>80</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726230154995</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726236153260</Id>
					<Name><![CDATA[p_reloadDatabase]]></Name>
					<X>560</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726236153258</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726238630353</Id>
					<Name><![CDATA[p_createCurrentElectricityEA]]></Name>
					<X>560</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726238630351</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726238717943</Id>
					<Name><![CDATA[p_runHeadlessAtStartup]]></Name>
					<X>560</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[true]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1726238717941</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1726495028597</Id>
					<Name><![CDATA[map_zoomlevel]]></Name>
					<X>60</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1726495028595</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1729681165302</Id>
					<Name><![CDATA[p_local4localBackendUrl]]></Name>
					<X>214</X><Y>59</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["https://local4local-backend.zenmo.com"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1729681165300</Id>
							<Label><![CDATA[p_local4localBackendUrl]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1729681165307</Id>
					<Name><![CDATA[p_local4localSession]]></Name>
					<X>214</X><Y>79</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA["startPilot"]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1729681165305</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1726235892488</Id>
					<Name><![CDATA[databaseNames]]></Name>
					<X>60</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[String[]]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
						<CollectionInitializer Class="CodeValue">
							<Code><![CDATA[//Format: {Excel name, sheet/database name}
{
{"Buildings", "buildings"},
{"GridNodes", "gridnodes"},
{"Neighbourhoods", "neighbourhoods"},
{"Chargepoints", "chargepoints"}
}
]]></Code>
						</CollectionInitializer>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726226738848</Id>
					<Name><![CDATA[f_overwriteAvgValuesAVGCDatabase]]></Name>
					<Description><![CDATA[Function used to overwrite parameters in the AVGC_database in the loader ]]></Description>
					<X>580</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (avg_electricity_consumption_house_kWh_p_yr != null && avg_electricity_consumption_house_kWh_p_yr > 0){
	loader_L4L.avgc_data.p_avgHouseElectricityConsumption_kWh_yr = avg_electricity_consumption_house_kWh_p_yr;
}
if (avg_gas_consumption_house_m3_p_yr != null && avg_gas_consumption_house_m3_p_yr > 0){
	loader_L4L.avgc_data.p_avgHouseGasConsumption_m3_yr = avg_gas_consumption_house_m3_p_yr;
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726226738852</Id>
					<Name><![CDATA[f_initializeRemainingTotals]]></Name>
					<ExcludeFromBuild>true</ExcludeFromBuild>
					<X>580</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Initialize remaining totals of the area
loader_L4L.v_remainingNumberOfVans = total_vans_companies;
loader_L4L.v_remainingNumberOfTrucks = total_trucks_companies;
loader_L4L.v_remainingElectricityDelivery_kWh = total_electricity_consumption_companies_kWh_p_yr;
loader_L4L.v_remainingGasConsumption_m3 = total_gas_consumption_companies_m3_p_yr;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726227634344</Id>
					<Name><![CDATA[f_setProject_data]]></Name>
					<X>580</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create the project data record and send it to loader
loader_L4L.project_data = Project_data.builder().

//Project settings
project_name(project_name).
project_type(project_type).
survey_type(survey_type).

//Database names
databaseNames(databaseNames).

//Map centre coordinates
map_centre_latitude(map_centre_latitude).
map_centre_longitude(map_centre_longitude).
//map_zoomlevel(map_zoomlevel).

//Project specific actors
grid_operator(grid_operator).
hasCongestionPricing(hasCongestionPricing).
energy_coop(energy_coop).
energy_supplier(energy_supplier).

//Project totals
total_electricity_consumption_companies_kWh_p_yr(total_electricity_consumption_companies_kWh_p_yr).
total_gas_consumption_companies_m3_p_yr(total_gas_consumption_companies_m3_p_yr).
avg_electricity_consumption_house_kWh_p_yr(avg_electricity_consumption_house_kWh_p_yr).
avg_gas_consumption_house_m3_p_yr(avg_gas_consumption_house_m3_p_yr).
total_cars_houses(total_cars_houses).
total_vans_companies(total_vans_companies).
total_trucks_companies(total_trucks_companies).
build();
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726231260460</Id>
					<Name><![CDATA[f_startModel]]></Name>
					<X>560</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Send settings to the loader
f_setSettings();

//Send project data to the loader
f_setProject_data();

//Project specific initialize functions
f_projectSpecificInitializeFunctions();

//Startup loader
loader_L4L.p_local4localBackendUrl=p_local4localBackendUrl;
loader_L4L.p_local4localSession=p_local4localSession;
loader_L4L.f_startUpLoader_default();

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726235796348</Id>
					<Name><![CDATA[f_projectSpecificInitializeFunctions]]></Name>
					<X>560</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Manually overwrite the avgc values
f_overwriteAvgValuesAVGCDatabase();

//Initialize remaining totals in the loader
//f_initializeRemainingTotals();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1726238799507</Id>
					<Name><![CDATA[f_setSettings]]></Name>
					<X>580</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//Create the project data record and send it to loader
loader_L4L.settings = Settings.builder().
//Simulation settings
reloadDatabase(p_reloadDatabase).
createCurrentElectricityEA(p_createCurrentElectricityEA).
runHeadlessAtStartup(p_runHeadlessAtStartup).
resultsUIRadioButtonSetup(OL_RadioButtonSetup.OFF).

build();]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1726154250911</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1726155990352</Id>
					<Name><![CDATA[loader_L4L]]></Name>
					<X>560</X><Y>260</Y>
					<Label><X>20</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[zerol4l]]></PackageName>
						<ClassName><![CDATA[Loader_L4L]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[Loader_L4L]]></ClassName>
							<ItemName><![CDATA[1709049506459]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[p_local4localBackendUrl]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_local4localSession]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[zero_Interface]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[p_createGridnodeTimeSeries]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[genericProfiles_data]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[project_data]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[settings]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[user]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>false</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>XYZ</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>SPECIFIED_NUMBER</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1726154250917</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Text>
					<Id>1726226738840</Id>
					<Name><![CDATA[text1]]></Name>
					<X>50</X><Y>400</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Project specific energy consumption totals and averages]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726226738842</Id>
					<Name><![CDATA[text4]]></Name>
					<X>50</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Project map coordinates]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726226738844</Id>
					<Name><![CDATA[text3]]></Name>
					<X>50</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Project specific actors]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726226738846</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Project Settings]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726231195744</Id>
					<Name><![CDATA[text2]]></Name>
					<X>550</X><Y>120</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Start project functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726235269685</Id>
					<Name><![CDATA[txt_databaseNames]]></Name>
					<X>50</X><Y>130</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Database Definition]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726235447790</Id>
					<Name><![CDATA[txt_projectSpecificLoader]]></Name>
					<X>550</X><Y>230</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Project specific Loader]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726235740075</Id>
					<Name><![CDATA[txt_projectSpecificFunctions]]></Name>
					<X>560</X><Y>300</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Project Specific initialize Functions]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1726238735834</Id>
					<Name><![CDATA[txt_simulationSettings]]></Name>
					<X>550</X><Y>30</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Simulation Settings]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>14</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1729007122544</Id>
			<Name><![CDATA[EnergyCoopL4L]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_calculateKPIs(){
	super.f_calculateKPIs();
	f_getFinancesL4L();
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[EnergyCoop]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_actorContractList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_connectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridNodeUnderResponsibility]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentActorID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electricitySupplier]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_CoopParent]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridOperator]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_methaneSupplier]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_hydrogenSupplier]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatSupplier]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_yearlyOperationalCosts_eur]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_applyKostprijsPlus]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorGroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_actorSubgroup]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_bufferPrice_eurpMWh]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_feedinCompensation_eurpMWh]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_onbalansMarkup_r]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1729007122550</Id>
				<Name><![CDATA[1729007122550]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1729065600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1729007122547</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1729007122551</CurrentLevel>
			<ConnectionsId>1729007122545</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1729601818209</Id>
					<Name><![CDATA[v_coopReport]]></Name>
					<X>1190</X><Y>910</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_CoopReport]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new J_CoopReport()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1729691963838</Id>
					<Name><![CDATA[v_selfConsumptionCoopAssets_MWh]]></Name>
					<X>40</X><Y>970</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1730121166984</Id>
					<Name><![CDATA[v_coopReportIncludeFeedinInOwnConsumption]]></Name>
					<X>1190</X><Y>930</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[J_CoopReport]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new J_CoopReport()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1729495881792</Id>
					<Name><![CDATA[p_bufferPrice_eurpMWh]]></Name>
					<X>1190</X><Y>840</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[20.0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1729495881790</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1730297167530</Id>
					<Name><![CDATA[p_feedinCompensation_eurpMWh]]></Name>
					<X>1190</X><Y>860</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[50]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1730297167528</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1730304641116</Id>
					<Name><![CDATA[p_onbalansMarkup_r]]></Name>
					<X>1190</X><Y>880</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1730304641114</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1729007310573</Id>
					<Name><![CDATA[c_AssetCosts]]></Name>
					<X>1194</X><Y>815</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[J_AssetCost]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[J_CoopReport]]></ReturnType>
					<Id>1729007245414</Id>
					<Name><![CDATA[f_getFinancesL4L]]></Name>
					<Description><![CDATA[Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6]]></Description>
					<X>1193</X><Y>792</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double totalOwnProduction_MWh = 0;
double totalOwnProductionCost_eur = 0;
var coopReport = new J_CoopReport();

int arrayLength = am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries().length;
double totalSDEincome_eur = 0;

for (var ci : c_AssetCosts) {
	// assetAvgLCOE_eurpMWh += 1000*ci.getLCOE_eurpkWh() / (double) nbCostItems;	
	
	totalOwnProduction_MWh += -ci.energyAsset().getEnergyUsed_kWh()/1000;
	if (ci.LCOE_eurpkWh() == 0.0) {
		totalOwnProductionCost_eur += ci.LCOE_eurpkWh() * -ci.energyAsset().getEnergyUsed_kWh();
	} else {
		totalOwnProductionCost_eur += f_getYearlyCosts_eur(ci);
	}
	
	// SDE income per asset, requires time series of production per asset! That could be gathered from corresponding gridConnections!
	
	double SDE_tariff_eurpMWh = 1000*ci.SDE_tariff_eurpkWh();
	double SDEincome_eur = 0;
	double[] gcBalanceTimeSeries_kW = ((GridConnection)ci.energyAsset().getParentAgent()).am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries();
	double productionEPEXvalue_eur = 0;
	
	for (int i=0; i<gcBalanceTimeSeries_kW.length; i++) {
		// SDE subsidie voor alle stroom van eigen opwekassets: (exclusief opwek bij klanten)
		productionEPEXvalue_eur += -gcBalanceTimeSeries_kW[i]/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);
		SDEincome_eur += -gcBalanceTimeSeries_kW[i]/1000 * energyModel.p_timeStep_h * max(0,SDE_tariff_eurpMWh-max(0,energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i)));
	}
	//traceln("SDE income: %s eur", SDEincome_eur);
	ci.setProductionEPEXvalue_eur( productionEPEXvalue_eur );
	ci.setTotalProduction_MWh( -ci.energyAsset().getEnergyUsed_kWh() / 1000 );
	ci.setSDEincome_eur(SDEincome_eur);
	traceln("Asset production average EPEX value: %s eurpMWh", ci.getAvgProductionValue_eurpMWh());
	traceln("SDEincome_eur: %s", ci.getSDEincome_eur());
	totalSDEincome_eur += SDEincome_eur;	
}
double assetAvgLCOE_eurpMWh=0;
if (totalOwnProduction_MWh>0){
	assetAvgLCOE_eurpMWh = totalOwnProductionCost_eur / totalOwnProduction_MWh;
}

// Initialize totals
//double SDEincome_eur = 0; // SDE++ subsidie meerekenen? Dwz. invoersubsidie wanneer marktprijs lager is dan ...ct/kWh. 
double EPEXcosts_eur = 0;
double EPEXincome_eur = 0;
double FeedInEPEXvalue_eur = 0;

//double selfConsumptionCoopAssets_MWh = 0; // The part of the 'owned' production that is delivered to customers (as opposed to sold on market)
v_selfConsumptionCoopAssets_MWh = 0;

for (int i=0; i<arrayLength; i++) { // Loop over all timesteps for the relevant arrays.
	// Loop through coop nett power to calculate yearly money to EPEX
	EPEXcosts_eur += max(0,am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	EPEXincome_eur += max(0,-am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	
	// Onbalanskosten: reken p_onbalansMarkup_r kosten op alle EPEX transacties:
	//onbalansCosts_eur += p_onbalansMarkup_r * abs(acc_annualElectricityBalance_kW.getTimeSeries()[i])/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);	
	
	//totalSDEincome_eur += acc_annualOwnElectricityProduction_kW.getTimeSeries()[i]/1000 * energyModel.p_timeStep_h * max(0,assetAvgLCOE_eurpMWh-energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i));
	// Need feedIn accumulator to calculate customer Feedin costs based on hourly EPEX price.
	FeedInEPEXvalue_eur += acc_totalCustomerFeedIn_kW.getTimeSeries()[i]/1000 * energyModel.p_timeStep_h * energyModel.tf_dayAheadElectricityPricing_eurpMWh(energyModel.p_timeStep_h*i);

	// Opwek van eigen productie assets die geleverd wordt aan klanten:
	v_selfConsumptionCoopAssets_MWh += max(0,acc_totalOwnElectricityProduction_kW.getTimeSeries()[i] - max(0,-am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries()[i]))*energyModel.p_timeStep_h/1000;
}
double onbalansCosts_eur = p_onbalansMarkup_r * ( EPEXcosts_eur + EPEXincome_eur );

traceln("Average LCOE of own assets: %s eur/MWh", assetAvgLCOE_eurpMWh);
traceln("Average LCOE of own assets with SDE subsidies: %s eur/MWh", (totalOwnProductionCost_eur-totalSDEincome_eur)/ totalOwnProduction_MWh);


double totalOwnElectricityProduced_MWh = acc_totalOwnElectricityProduction_kW.getIntegral() / 1000;

traceln("Average FeedInEpexValue_eurpMWh: %s", FeedInEPEXvalue_eur/v_totalCustomerFeedIn_MWh);

/*double totalDeliveredElec_MWh = v_totalElectricitySelfConsumed_MWh + fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY); // v_totalElectricitySelfConsumed_MWh includes feed-in from customers that is re-delivered. However, it's only delivery, not feed-in! (Niet gesaldeerd)
for (var gridBattery : energyModel.GridBatteries){
	totalDeliveredElec_MWh -= gridBattery.p_batteryAsset.getEnergyUsed_kWh()/1000;
}*/
double totalDeliveredElec_MWh = v_totalCustomerDelivery_MWh;
/*if (abs(totalDeliveredElec_MWh - v_customerDelivery_MWh) > 0.1) {
	traceln("Delivery error: %s MWh", totalDeliveredElec_MWh - v_customerDelivery_MWh);
	throw new RuntimeException("Delivery calcs don't match!");
}*/

double customerFeedIn_MWh = fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY) + totalDeliveredElec_MWh - totalOwnElectricityProduced_MWh - fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY); // This should include all the energy that is received from customers!
customerFeedIn_MWh = v_totalCustomerFeedIn_MWh;
/*if (abs(customerFeedIn_MWh - v_customerFeedIn_MWh) > 0.100001) {
	traceln("Feedin error: %s MWh", customerFeedIn_MWh - v_customerFeedIn_MWh);
	throw new RuntimeException("Feedin calcs don't match!");
}*/
//double nettDeliveredElec_MWh = totalDeliveredElec_MWh - customerFeedIn_MWh; // 

double kostprijs_eurpMWh;
if ( totalOwnElectricityProduced_MWh == 0 ) {
	kostprijs_eurpMWh = assetAvgLCOE_eurpMWh; // Neem aan dat de cooperatie dit bedrag ook krijgt voor niet-gelijktijdig geleverde stroom!
} else {
	kostprijs_eurpMWh = assetAvgLCOE_eurpMWh - totalSDEincome_eur / totalOwnElectricityProduced_MWh; // Neem aan dat de cooperatie dit bedrag ook krijgt voor niet-gelijktijdig geleverde stroom!
}
if (p_feedinCompensation_eurpMWh == 0.0) {
	traceln("p_feedinCompensation_eurpMWh is zero, using asset-kostprijs  of %s eur/MWh as feedinCompensation", kostprijs_eurpMWh);
	p_feedinCompensation_eurpMWh = kostprijs_eurpMWh;	
}

double kostprijsPlus_eurpMWh = kostprijs_eurpMWh*(1+p_onbalansMarkup_r) + p_bufferPrice_eurpMWh;
//double EPEXbalance_eur = EPEXincome_eur - EPEXcosts_eur; // positive balance means nett-income!

// Leveranciersprijs
double gelijktijdigeLevering_MWh=v_selfConsumptionCoopAssets_MWh;

double leveranciersKosten_eur = kostprijs_eurpMWh * totalOwnElectricityProduced_MWh  + p_feedinCompensation_eurpMWh * customerFeedIn_MWh + EPEXcosts_eur + onbalansCosts_eur + totalDeliveredElec_MWh * p_bufferPrice_eurpMWh; 
double leveranciersprijs_eurpMWh = (leveranciersKosten_eur - EPEXincome_eur - kostprijsPlus_eurpMWh * gelijktijdigeLevering_MWh )/(totalDeliveredElec_MWh - gelijktijdigeLevering_MWh); // Zorg dat EDV break-even draait
// Gemiddelde leveringsprijs
double gemiddeldeLeveringsprijs_eurpMWh = ( kostprijsPlus_eurpMWh * gelijktijdigeLevering_MWh + leveranciersprijs_eurpMWh * (totalDeliveredElec_MWh - gelijktijdigeLevering_MWh) ) / totalDeliveredElec_MWh;
//double leveranciersprijs_eurpMWh = 
double leveranciersInkomsten_eur = kostprijsPlus_eurpMWh * gelijktijdigeLevering_MWh + EPEXincome_eur + (totalDeliveredElec_MWh - gelijktijdigeLevering_MWh) * leveranciersprijs_eurpMWh;
//totalDeliveredElec_MWh = nettDeliveredElec_MWh; // Assume that nettDelivered is what counts for finances, such that feed-in tarrif is accounted for!

coopReport.ownProduction(J_AccountingLine.fromTotalPrice(totalOwnProduction_MWh, totalOwnProductionCost_eur-totalSDEincome_eur));
coopReport.selfConsumption(J_AccountingLine.fromPricePerMWh(gelijktijdigeLevering_MWh, kostprijsPlus_eurpMWh));
//coopReport.selfConsumptionIncFeedin(J_AccountingLine.fromPricePerMWh(v_totalElectricitySelfConsumed_MWh, kostprijs_eurpMWh+bufferCost_eurpMWh));
coopReport.reDeliveryFeedIn(J_AccountingLine.fromPricePerMWh(v_totalElectricitySelfConsumed_MWh-v_selfConsumptionCoopAssets_MWh, kostprijsPlus_eurpMWh));
coopReport.nonsimultaneousDelivery(J_AccountingLine.fromPricePerMWh(totalDeliveredElec_MWh-gelijktijdigeLevering_MWh, leveranciersprijs_eurpMWh));
coopReport.EPEXbuy(J_AccountingLine.fromTotalPrice(fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY), EPEXcosts_eur));
coopReport.EPEXsell(J_AccountingLine.fromTotalPrice(fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY), EPEXincome_eur));
coopReport.totalDelivery(J_AccountingLine.fromPricePerMWh(totalDeliveredElec_MWh, gemiddeldeLeveringsprijs_eurpMWh));
coopReport.onbalans(J_AccountingLine.fromTotalPrice((fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY)+fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY))*1000, onbalansCosts_eur));

traceln("Totale opwek Coöperatie Assets: %s MWh, tarief: %s €/MWh, waarde: %s €", totalOwnElectricityProduced_MWh, kostprijs_eurpMWh, totalOwnElectricityProduced_MWh*kostprijs_eurpMWh); // Also need production from own assets only!
traceln("Gelijktijdige opwek en verbruik (incl zelfverbruik teruglevering van leden): %s MWh", v_totalElectricitySelfConsumed_MWh);
traceln("Gelijktijdige opwek en verbruik (excl zelfverbruik teruglevering van leden): %s MWh, tarief: %s €/MWh, waarde: %s €", v_selfConsumptionCoopAssets_MWh, kostprijsPlus_eurpMWh, v_selfConsumptionCoopAssets_MWh * kostprijsPlus_eurpMWh);
traceln("Ongelijktijdige levering, incl zelfverbruik teruglevering van leden: %s MWh, tarief: %s €/MWh, waarde: %s €", totalDeliveredElec_MWh-v_selfConsumptionCoopAssets_MWh, leveranciersprijs_eurpMWh, leveranciersprijs_eurpMWh*(totalDeliveredElec_MWh-v_selfConsumptionCoopAssets_MWh));
traceln("Ongelijktijdige levering, excl zelfverbruik teruglevering van leden: %s MWh, tarief: %s €/MWh, waarde: %s €", totalDeliveredElec_MWh-v_totalElectricitySelfConsumed_MWh, leveranciersprijs_eurpMWh, leveranciersprijs_eurpMWh*(totalDeliveredElec_MWh-v_totalElectricitySelfConsumed_MWh));

traceln("Totale inkoop op EPEX: %s MWh, tarief: %s €/MWh, value: %s €", fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY), EPEXcosts_eur/(fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY)), EPEXcosts_eur);
traceln("Totale verkoop op EPEX: %s MWh, tarief: %s €/MWh, value: %s €", fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY), EPEXincome_eur/(fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY)), EPEXincome_eur);

traceln("Totale levering aan klanten: %s MWh, tarief: %s €/MWh, waarde: %s €", roundToDecimal(totalDeliveredElec_MWh,2), gemiddeldeLeveringsprijs_eurpMWh, gemiddeldeLeveringsprijs_eurpMWh*totalDeliveredElec_MWh);

traceln("Totale teruglevering van klanten: %s MWh, tarief: %s €/MWh, waarde: %s €", customerFeedIn_MWh, p_feedinCompensation_eurpMWh, customerFeedIn_MWh*p_feedinCompensation_eurpMWh);

traceln("Coop gelijktijdigheid: fractie van eigen opwek geleverd aan leden: %s", v_selfConsumptionCoopAssets_MWh/totalOwnElectricityProduced_MWh);
//traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-energyModel.v_totalElectricityExport_MWh/totalOwnElectricityProduced_MWh); // Kan negatief worden!
traceln("Coop gelijktijdigheid: eigen opwek minus export, gedeeld door eigen opwek: %s", 1-fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY)/totalOwnElectricityProduced_MWh); // Kan negatief worden!

traceln("Kostprijs+ met SDE verrekend: %s €/MWh", roundToInt(kostprijsPlus_eurpMWh));
traceln("Gemiddelde leveringsprijs: %s €/MWh", roundToInt( gemiddeldeLeveringsprijs_eurpMWh ));
traceln("Leveranciersprijs ongelijktijdige stroom: %s €/MWh", roundToInt(leveranciersprijs_eurpMWh) );

traceln("SDE++ income: %s €", totalSDEincome_eur);
traceln("Total onbalans costs: %s €", onbalansCosts_eur);
traceln("EDV total income: %s €", roundToInt(leveranciersKosten_eur));
traceln("EDV total costs: %s €", roundToInt(leveranciersInkomsten_eur));

if (abs(leveranciersKosten_eur-leveranciersInkomsten_eur) > 1) {
	traceln("Coop not running break-even!!");
	throw new RuntimeException("Coop finances not balanced!");
	//traceln("Coop total income: %s €", leveranciersKosten_eur);
	//traceln("Coop total costs: %s €", leveranciersInkomsten_eur);
}

v_coopReport = coopReport;

// Include FeedIn in Coop production
coopReport = new J_CoopReport();

// Add feedin as 'own production'
totalOwnProduction_MWh += v_totalCustomerFeedIn_MWh;
totalOwnProductionCost_eur += v_totalCustomerFeedIn_MWh*p_feedinCompensation_eurpMWh;
assetAvgLCOE_eurpMWh = totalOwnProductionCost_eur / totalOwnProduction_MWh;
if ( totalOwnElectricityProduced_MWh == 0.0 || totalSDEincome_eur == 0.0) {
	kostprijs_eurpMWh = assetAvgLCOE_eurpMWh; // Neem aan dat de cooperatie dit bedrag ook krijgt voor niet-gelijktijdig geleverde stroom!
} else {
	kostprijs_eurpMWh = assetAvgLCOE_eurpMWh - totalSDEincome_eur / totalOwnProduction_MWh; // Neem aan dat de cooperatie dit bedrag ook krijgt voor niet-gelijktijdig geleverde stroom!
}
kostprijsPlus_eurpMWh = kostprijs_eurpMWh*(1+p_onbalansMarkup_r) + p_bufferPrice_eurpMWh;
traceln("kostprijs+ met meetellen teruglevering als eigen opwek: %s eur/MWh", kostprijsPlus_eurpMWh);

gelijktijdigeLevering_MWh=v_totalElectricitySelfConsumed_MWh;
leveranciersKosten_eur = kostprijs_eurpMWh * totalOwnProduction_MWh + totalDeliveredElec_MWh * p_bufferPrice_eurpMWh + EPEXcosts_eur + onbalansCosts_eur; 
//leveranciersKosten_eur = totalOwnProductionCost_eur - totalSDEincome_eur + EPEXcosts_eur + totalDeliveredElec_MWh * p_bufferPrice_eurpMWh; 
leveranciersprijs_eurpMWh = (leveranciersKosten_eur - EPEXincome_eur - kostprijsPlus_eurpMWh * gelijktijdigeLevering_MWh )/(totalDeliveredElec_MWh - gelijktijdigeLevering_MWh); // Zorg dat EDV break-even draait

// Gemiddelde leveringsprijs
gemiddeldeLeveringsprijs_eurpMWh = ( kostprijsPlus_eurpMWh * gelijktijdigeLevering_MWh + leveranciersprijs_eurpMWh * (totalDeliveredElec_MWh - gelijktijdigeLevering_MWh) ) / totalDeliveredElec_MWh;
leveranciersInkomsten_eur = kostprijsPlus_eurpMWh * gelijktijdigeLevering_MWh + EPEXincome_eur + (totalDeliveredElec_MWh - gelijktijdigeLevering_MWh) * leveranciersprijs_eurpMWh;

coopReport.ownProduction(J_AccountingLine.fromTotalPrice(totalOwnProduction_MWh, totalOwnProductionCost_eur-totalSDEincome_eur));
coopReport.selfConsumption(J_AccountingLine.fromPricePerMWh(gelijktijdigeLevering_MWh, kostprijsPlus_eurpMWh));
//coopReport.selfConsumptionIncFeedin(J_AccountingLine.fromPricePerMWh(v_totalElectricitySelfConsumed_MWh, kostprijs_eurpMWh+bufferCost_eurpMWh));
coopReport.reDeliveryFeedIn(J_AccountingLine.fromPricePerMWh(v_totalElectricitySelfConsumed_MWh-v_selfConsumptionCoopAssets_MWh, kostprijsPlus_eurpMWh));
coopReport.nonsimultaneousDelivery(J_AccountingLine.fromPricePerMWh(totalDeliveredElec_MWh-gelijktijdigeLevering_MWh, leveranciersprijs_eurpMWh));
coopReport.EPEXbuy(J_AccountingLine.fromTotalPrice(fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY), EPEXcosts_eur));
coopReport.EPEXsell(J_AccountingLine.fromTotalPrice(fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY), EPEXincome_eur));
coopReport.totalDelivery(J_AccountingLine.fromPricePerMWh(totalDeliveredElec_MWh, gemiddeldeLeveringsprijs_eurpMWh));
coopReport.onbalans(J_AccountingLine.fromTotalPrice((fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY)+fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY))*1000, onbalansCosts_eur));
v_coopReportIncludeFeedinInOwnConsumption = coopReport;

traceln("Counting feedin as own generation:");
traceln("Coop total income: %s €", leveranciersKosten_eur);
traceln("Coop total costs: %s €", leveranciersInkomsten_eur);

if (abs(leveranciersKosten_eur-leveranciersInkomsten_eur) > 1) {
	traceln("Coop not running break-even!!");
	//traceln("Coop total income: %s €", leveranciersKosten_eur);
	//traceln("Coop total costs: %s €", leveranciersInkomsten_eur);
	throw new RuntimeException("Coop finances not balanced!");
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732541109430</Id>
					<Name><![CDATA[f_getYearlyCosts_eur]]></Name>
					<X>1380</X><Y>790</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[assetCost]]></Name>
						<Type><![CDATA[J_AssetCost]]></Type>
					</Parameter>
					<Body><![CDATA[double yearlyCosts_eur = 0.0;
yearlyCosts_eur+=assetCost.OPEX_eurpa();
yearlyCosts_eur+=assetCost.CAPEX_eur()/assetCost.depreciationPeriod_y();
yearlyCosts_eur+=assetCost.CAPEX_eur()*assetCost.interestRate_r();
traceln("Capex/opex based production costs for asset %s: %s eur/year", assetCost, yearlyCosts_eur);
return yearlyCosts_eur;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1729007122545</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1729007122551</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1729516384990</Id>
			<Name><![CDATA[CoopReportTable]]></Name>
			<Extends><![CDATA[ChartArea]]></Extends>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1729516384996</Id>
				<Name><![CDATA[1729516384996]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1729584000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1729516384993</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1729516384997</CurrentLevel>
			<ConnectionsId>1729516384991</ConnectionsId>
			<AgentLinks>
				<AgentLink>
					<Id>1729516384991</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1729516384997</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1732205702998</Id>
			<Name><![CDATA[GridBatteryL4L]]></Name>
			<AdditionalClassCode><![CDATA[@Override
public void f_operateFlexAssets_overwrite() {
	f_operateFlexAssets_overwrite_L4L();
}

@Override
public void f_batteryManagementBalanceGrid(double SOC) {
	f_batteryManagementBalanceGrid_L4L(SOC);
}

@Override
public void f_batteryManagementPriceGrid(double SOC) {
	f_batteryManagementPriceGrid_L4L(SOC);
}

@Override
public void f_batteryManagementBalanceSupply(double SOC) {
	f_batteryManagementBalanceSupply_L4L(SOC);
}]]></AdditionalClassCode>
			<ExtendsReference>
				<PackageName><![CDATA[zero_engine]]></PackageName>
				<ClassName><![CDATA[GCGridBattery]]></ClassName>
			</ExtendsReference>
			<Parameters>
				<Parameter>
					<Name><![CDATA[p_isSliderGC]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionCategory]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeElectricID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gridConnectionID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_parentNodeHeatID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_BuildingThermalAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_primaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_ownerID]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_secondaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatingType]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyAssetList]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_chargingAttitudeVehicles]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_batteryAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_electrolyserOperationMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_heatBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_gasBuffer]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_cookingTracker]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_energyLabel]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_DHWAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_longitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_latitude]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_floorSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_GISPoint]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_owner]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_roofSurfaceArea_m2]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_purposeBAG]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_tertiaryHeatingAsset]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_curtailmentMode]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_name]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedFeedinCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_contractedDeliveryCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_physicalConnectionCapacity_kW]]></Name>
				</Parameter>
				<Parameter>
					<Name><![CDATA[p_address]]></Name>
				</Parameter>
			</Parameters>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1732205703004</Id>
				<Name><![CDATA[1732205703004]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1732262400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1732205703001</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1732205703005</CurrentLevel>
			<ConnectionsId>1732205702999</ConnectionsId>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732205725339</Id>
					<Name><![CDATA[f_batteryManagementBalanceGrid_L4L]]></Name>
					<Description><![CDATA[Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>1390</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[GridNode node = l_parentNodeElectric.getConnectedAgent();
if (p_batteryAsset.getStorageCapacity_kWh() != 0){	
	double currentCoopElectricitySurplus_kW = 0;
	double CoopConnectionCapacity_kW = 0;
	double v_previousPowerBattery_kW = v_previousPowerElectricity_kW;// Assumes battery is only asset on gridconnection!! p_batteryAsset.electricityConsumption_kW-p_batteryAsset.electricityProduction_kW;
	//traceln("Previous battery power: " + v_previousPowerElectricity_kW);
	GridNode GN = l_parentNodeElectric.getConnectedAgent();
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		/*if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent instanceof EnergyCoop ) { // get electricity balance from Coop 			
			currentCoopElectricitySurplus_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_electricitySurplus_kW + v_previousPowerBattery_kW;
			CoopConnectionCapacity_kW = 0.9*((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay			
		} else { // Get gridload directly from node*/
			currentCoopElectricitySurplus_kW = -GN.v_currentLoad_kW + v_previousPowerBattery_kW;			
			CoopConnectionCapacity_kW = 0.9*GN.p_capacity_kW; // Use only 90% of capacity for robustness against delay
		//}
	} else { // Get gridload directly from node
		currentCoopElectricitySurplus_kW = -node.v_currentLoad_kW + v_previousPowerBattery_kW;			
		CoopConnectionCapacity_kW = 0.95*node.p_capacity_kW; // Use only 90% of capacity for robustness against delay
	}
	//traceln("Operating buurtbatterij, current local surplus is %s kW.", currentCoopElectricitySurplus_kW);	
		
	double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
	double FeedbackGain_kWpSOC = 3 * p_batteryAsset.getCapacityElectric_kW(); // How strongly to aim for SOC setpoint
	double FeedforwardGain_kWpKw = 0.1; // Feedforward based on current surpluss in Coop
	double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
	double chargeSetpoint_kW = 0;
	
	// ----------------------------------------------------
	//FeedforwardGain_kWpKw = 0.3; // Feedforward based on current surpluss in Coop
	//FeedbackGain_kWpSOC = 1.5 * 0.6 * p_batteryAsset.getElectricCapacity_kW();
	double SOC_setp_fr = 0.8;
	SOC_setp_fr = (0.5 + 0.4 * Math.sin(2*Math.PI*(energyModel.t_h-18)/24))-3*GN.v_electricityYieldForecast_fr; // Sinusoidal setpoint: aim for high SOC at 18:00h
	
	chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW())); // Convert to powerFraction and limit power	
	//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
	//traceln("hello?");
	
	// ----------------------------------------------------
	// p_forecastTime_h = 10
	//traceln("availableDischargePower_kW: %s", availableDischargePower_kW);
	/*
	if (availableChargePower_kW < 0) { // prevent congestion
		p_batteryAsset.v_powerFraction_fr = max(-1, availableChargePower_kW / p_batteryAsset.getCapacityElectric_kW());
		return;
	}
	if (energyModel.v_currentSolarPowerNormalized_r > 0.1) {
		if (GN.v_currentLoad_kW < 0) {
			p_batteryAsset.v_powerFraction_fr = max(-1, min(1, -GN.v_currentLoad_kW / p_batteryAsset.getCapacityElectric_kW()));
		}
	}
	else {
		double expectedWind_kWh = node.v_totalInstalledWindPower_kW * energyModel.v_WindYieldForecast_fr * energyModel.p_forecastTime_h;
		double expectedSolar_kWh = node.v_totalInstalledPVPower_kW * energyModel.v_SolarYieldForecast_fr * energyModel.p_forecastTime_h;
		double incomingPower_fr = (expectedSolar_kWh + expectedWind_kWh) / p_batteryAsset.getStorageCapacity_kWh();
		double SOC_setp_fr = 1 - incomingPower_fr;
	
		chargeSetpoint_kW = FeedbackGain_kWpSOC*(SOC_setp_fr - p_batteryAsset.getCurrentStateOfCharge());
		chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
		p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW()));
	}
	*/
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732207567939</Id>
					<Name><![CDATA[f_batteryManagementPriceGrid_L4L]]></Name>
					<Description><![CDATA[Regeling voor prijsgestuurd balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>1390</X><Y>699</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[currentBatteryStateOfCharge_fr]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[if (p_batteryAsset.getStorageCapacity_kWh() != 0){
	//double willingnessToPayDefault_eurpkWh = 0.3;
	double WTPfeedbackGain_eurpSOC = 0.5; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh
	double priceGain_kWhpeur = 2; // How strongly to ramp up power with price-delta's
	//double congestionTariffCoop_eurpkWh = -(((ConnectionOwner)p_ownerActor).p_CoopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW)/1200*0.1;
	
	double chargeSetpoint_kW = 0;	
	double currentElectricityPriceCharge_eurpkWh;
	GridNode GN = l_parentNodeElectric.getConnectedAgent();
	//double currentElectricityPriceDischarge_eurpkWh;
	/*if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();
		currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY)+100.0); // query price at 100kW charging
		//currentElectricityPriceDischarge_eurpkWh = ownerActor.f_getElectricityPrice(v_currentPowerElectricity_kW-100.0); // query price at -100kW charging
	} else { // Get EPEX price plus nodal price of GridNode
	*/
		//currentElectricityPriceCharge_eurpkWh = energyModel.nationalEnergyMarket.f_getNationalElectricityPrice_eurpMWh()/1000 + GN.v_currentTotalNodalPrice_eurpkWh;
		currentElectricityPriceCharge_eurpkWh = GN.v_currentTotalNodalPrice_eurpkWh;
		//currentElectricityPriceCharge_eurpkWh = l_parentNodeElectric.getConnectedAgent().v_currentTotalNodalPrice_eurpkWh;		
	//}
	v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );
	
	double currentCoopElectricitySurplus_kW = -GN.v_currentLoad_kW + v_previousPowerElectricity_kW;			
	double CoopConnectionCapacity_kW = 0.95*GN.p_capacity_kW; // Use only 90% of capacity for robustness against delay
	
	//traceln("Operating buurtbatterij, current local surplus is %s kW.", currentCoopElectricitySurplus_kW);
	
	double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
	
	
	double SOC_setp_fr = 0.9 - 2*GN.v_electricityYieldForecast_fr;	
	//SOC_setp_fr = (0.5 + 0.4 * Math.cos(2*Math.PI*(energyModel.t_h-18)/24))*(1-3*GN.v_electricityYieldForecast_fr); // Sinusoidal setpoint: aim for high SOC at 18:00h		
	//SOC_setp_fr = 0.6 + 0.25 * Math.sin(2*Math.PI*(main.t_h-12)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. 
	
	double SOC_deficit_fr = SOC_setp_fr - currentBatteryStateOfCharge_fr;
	
	// Define WTP price for charging and discharging!
//	double WTP_charge_eurpkWh = v_electricityPriceLowPassed_eurpkWh - chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
//	double WTP_discharge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		
	/* // Choose charging power based on prices and desired SOC level
	if ( WTP_charge_eurpkWh > currentElectricityPriceCharge_eurpkWh ) { // if willingness to pay higher than current electricity price
		double WTP_charge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 0.5*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		chargeSetpoint_kW = p_batteryAsset.getElectricCapacity_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur ;
	} 
	else if (WTP_discharge_eurpkWh < currentElectricityPriceCharge_eurpkWh) {
		double WTP_discharge_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 0.5*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
		chargeSetpoint_kW = -p_batteryAsset.getElectricCapacity_kW()*(currentElectricityPriceCharge_eurpkWh - WTP_discharge_eurpkWh)*priceGain_kWhpeur;
	}*/
	
	//double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + 1.0*(energyModel.v_epexForecast_eurpkWh - v_electricityPriceLowPassed_eurpkWh) + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
	double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;
	chargeSetpoint_kW = p_batteryAsset.getCapacityElectric_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur;
					
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW())); // Convert to powerFraction and limit power
}]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732207567941</Id>
					<Name><![CDATA[f_batteryManagementBalanceSupply_L4L]]></Name>
					<Description><![CDATA[Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022]]></Description>
					<X>1390</X><Y>719</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[batterySOC]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// Simply tries to prevent exceeding feedin grid capacity, but otherwise aims for an empty battery (so there is always 'absorbtion capacity' available)

if (p_batteryAsset.getStorageCapacity_kWh() != 0){	
	double currentCoopElectricitySurplus_kW = 0;
	double CoopConnectionCapacity_kW = 0;
	double v_previousPowerBattery_kW = v_previousPowerElectricity_kW;// Assumes battery is only asset on gridconnection!! p_batteryAsset.electricityConsumption_kW-p_batteryAsset.electricityProduction_kW;
	//traceln("Previous battery power: " + v_previousPowerElectricity_kW);
	if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {
		if(((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent instanceof EnergyCoop ) { // get electricity balance from Coop 			
			currentCoopElectricitySurplus_kW = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_electricitySurplus_kW + v_previousPowerBattery_kW;
			CoopConnectionCapacity_kW = 0.9*((ConnectionOwner)l_ownerActor.getConnectedAgent()).p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay			
		} else { // Get gridload directly from node
			GridNode node = l_parentNodeElectric.getConnectedAgent();
			currentCoopElectricitySurplus_kW = -node.v_currentLoad_kW + v_previousPowerBattery_kW;			
			CoopConnectionCapacity_kW = 0.95*node.p_capacity_kW; // Use only 90% of capacity for robustness against delay
		}
	} else { // Get gridload directly from node
		GridNode node = l_parentNodeElectric.getConnectedAgent();
		currentCoopElectricitySurplus_kW = -node.v_currentLoad_kW + v_previousPowerBattery_kW;			
		CoopConnectionCapacity_kW = 0.95*node.p_capacity_kW; // Use only 90% of capacity for robustness against delay
	}
	//traceln("Operating buurtbatterij, current local surplus is %s kW.", currentCoopElectricitySurplus_kW);
	
	double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity
	double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity
	
	double FeedbackGain_kWpSOC = 5 * p_batteryAsset.getCapacityElectric_kW(); // How strongly to aim for SOC setpoint
	double FeedforwardGain_kWpKw = 0.0; // Feedforward based on current surpluss in Coop
	double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.
	double chargeSetpoint_kW = 0;
	double SOC_setp_fr = 0.0;

	
	chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - batterySOC) * FeedbackGain_kWpSOC;
	chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW())); // Convert to powerFraction and limit power
	//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");
	//traceln("hello?");
}
]]></Body>
				</Function>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1732207705616</Id>
					<Name><![CDATA[f_operateFlexAssets_overwrite_L4L]]></Name>
					<X>1370</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if ( p_batteryAsset != null ) {
	if ( p_batteryAsset.getStorageCapacity_kWh() != 0.0 && p_batteryAsset.getCapacityElectric_kW() != 0.0) {
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
		if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE){
			//f_batteryManagementGridLoad(v_batterySOC_fr);
			f_batteryManagementBalanceGrid(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.BALANCE_SUPPLY){ // Tries to minimize supply peaks
			f_batteryManagementBalanceSupply(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.PRICE){
			f_batteryManagementPrice(v_batterySOC_fr);
		} else if (p_batteryOperationMode == OL_BatteryOperationMode.NODAL_PRICING){
			f_batteryManagementPriceGrid(v_batterySOC_fr);
		}
		
		p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);	
		
		//v_batteryPowerElectric_kW = flowsMap.get(OL_EnergyCarriers.ELECTRICITY);
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();
	}
}
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1732205702999</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1732205703005</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
	</ActiveObjectClasses>
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0</AbsoluteAccuracy>
	<FixedTimeStep>1.0</FixedTimeStep>
	<RelativeAccuracy>1.0</RelativeAccuracy>
	<TimeAccuracy>0.1</TimeAccuracy>
	<Frame>
		<Width>1920</Width>
		<Height>980</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
			<ExternalConnection>
				<Id>1726240085410</Id>
				<Name><![CDATA[database]]></Name>
				<X>0</X><Y>0</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>true</PresentationFlag>
				<ShowLabel>true</ShowLabel>
				<DatabaseType>EXCEL_ACCESS</DatabaseType>
				<ConnectionURL><![CDATA[]]></ConnectionURL>
				<ConnectOnStartup>true</ConnectOnStartup>
				<DatabaseName><![CDATA[]]></DatabaseName>
				<ResourceReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[data_L4L/GridNodes_L4L.xlsx]]></ClassName>
				</ResourceReference>
				<Host><![CDATA[localhost]]></Host>
				<JdbcDriverClassName><![CDATA[net.sourceforge.jtds.jdbc.Driver]]></JdbcDriverClassName>
				<Login><![CDATA[]]></Login>
				<Password><![CDATA[]]></Password>
			</ExternalConnection>
			<ExternalConnection>
				<Id>1726155810018</Id>
				<Name><![CDATA[database]]></Name>
				<X>0</X><Y>0</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>true</PresentationFlag>
				<ShowLabel>true</ShowLabel>
				<DatabaseType>EXCEL_ACCESS</DatabaseType>
				<ConnectionURL><![CDATA[]]></ConnectionURL>
				<ConnectOnStartup>true</ConnectOnStartup>
				<DatabaseName><![CDATA[]]></DatabaseName>
				<ResourceReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[data_Generic/db_profiles.xlsx]]></ClassName>
				</ResourceReference>
				<Host><![CDATA[localhost]]></Host>
				<JdbcDriverClassName><![CDATA[net.sourceforge.jtds.jdbc.Driver]]></JdbcDriverClassName>
				<Login><![CDATA[]]></Login>
				<Password><![CDATA[]]></Password>
			</ExternalConnection>
			<ExternalConnection>
				<Id>1726240192563</Id>
				<Name><![CDATA[database]]></Name>
				<X>0</X><Y>0</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>true</PresentationFlag>
				<ShowLabel>true</ShowLabel>
				<DatabaseType>EXCEL_ACCESS</DatabaseType>
				<ConnectionURL><![CDATA[]]></ConnectionURL>
				<ConnectOnStartup>true</ConnectOnStartup>
				<DatabaseName><![CDATA[]]></DatabaseName>
				<ResourceReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[data_L4L/Neighbourhoods_L4L.xlsx]]></ClassName>
				</ResourceReference>
				<Host><![CDATA[localhost]]></Host>
				<JdbcDriverClassName><![CDATA[net.sourceforge.jtds.jdbc.Driver]]></JdbcDriverClassName>
				<Login><![CDATA[]]></Login>
				<Password><![CDATA[]]></Password>
			</ExternalConnection>
			<ExternalConnection>
				<Id>1726155785078</Id>
				<Name><![CDATA[database]]></Name>
				<X>0</X><Y>0</Y>
				<Label><X>10</X><Y>0</Y></Label>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>true</PresentationFlag>
				<ShowLabel>true</ShowLabel>
				<DatabaseType>EXCEL_ACCESS</DatabaseType>
				<ConnectionURL><![CDATA[]]></ConnectionURL>
				<ConnectOnStartup>true</ConnectOnStartup>
				<DatabaseName><![CDATA[]]></DatabaseName>
				<ResourceReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[data_L4L/Buildings_L4L.xlsx]]></ClassName>
				</ResourceReference>
				<Host><![CDATA[localhost]]></Host>
				<JdbcDriverClassName><![CDATA[net.sourceforge.jtds.jdbc.Driver]]></JdbcDriverClassName>
				<Login><![CDATA[]]></Login>
				<Password><![CDATA[]]></Password>
			</ExternalConnection>
			<TableImportSettings>
				<TableReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[gridnodes]]></ClassName>
				</TableReference>
				<ConnectionIndex>0</ConnectionIndex>
				<ExternalTableName><![CDATA["gridnodes"]]></ExternalTableName>
				<AutoImport>false</AutoImport>
			</TableImportSettings>
			<TableImportSettings>
				<TableReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[profiles]]></ClassName>
				</TableReference>
				<ConnectionIndex>1</ConnectionIndex>
				<ExternalTableName><![CDATA["profiles_2023"]]></ExternalTableName>
				<AutoImport>false</AutoImport>
			</TableImportSettings>
			<TableImportSettings>
				<TableReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[neighbourhoods]]></ClassName>
				</TableReference>
				<ConnectionIndex>2</ConnectionIndex>
				<ExternalTableName><![CDATA["neighbourhoods"]]></ExternalTableName>
				<AutoImport>false</AutoImport>
			</TableImportSettings>
			<TableImportSettings>
				<TableReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[buildings]]></ClassName>
				</TableReference>
				<ConnectionIndex>3</ConnectionIndex>
				<ExternalTableName><![CDATA["buildings"]]></ExternalTableName>
				<AutoImport>false</AutoImport>
			</TableImportSettings>
		</ImportSettings>
		<ExportSettings>
		</ExportSettings>
	</Database>

	<RunConfiguration ActiveObjectClassId="1726154250910">
		<Id>1658477103163</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>16384</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified date]]></StopOption>
			<InitialDate><![CDATA[1672531200000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1704067200000]]></FinalDate>	
			<FinalTime><![CDATA[8760.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>false</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>5.0</RealTimeScale>
			<EnableZoomAndPanning>false</EnableZoomAndPanning>
			<EnableDeveloperPanel>true</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>
    		<RunConfigurationInput>
				<Id>1729681210407</Id>
				<Name><![CDATA[P_local4localBackendUrl]]></Name>
				<InputReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[StartUp_L4L]]></ClassName>
					<ItemName><![CDATA[p_local4localBackendUrl]]></ItemName>
				</InputReference>
    		</RunConfigurationInput>
    		<RunConfigurationInput>
				<Id>1729681211611</Id>
				<Name><![CDATA[p_local4localSession]]></Name>
				<InputReference>
					<PackageName><![CDATA[zerol4l]]></PackageName>
					<ClassName><![CDATA[StartUp_L4L]]></ClassName>
					<ItemName><![CDATA[p_local4localSession]]></ItemName>
				</InputReference>
    		</RunConfigurationInput>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<Experiments>	
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1726154250910">
			<Id>1726135194587</Id>
			<Name><![CDATA[Simulation]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>4096</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Image>
					<Id>1726243119961</Id>
					<Name><![CDATA[zenmo_image]]></Name>
					<X>600</X><Y>340</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Width>700</Width>
					<Height>300</Height>
					<Rotation>0.0</Rotation>
					<ImageFiles>
						<ImageResourceReference>
							<PackageName><![CDATA[zerol4l]]></PackageName>
							<ClassName><![CDATA[logo_zenmo.png]]></ClassName>
						</ImageResourceReference>
					</ImageFiles>
					<OriginalSize>false</OriginalSize>
				</Image>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[project_name]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[map_centre_latitude]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[map_centre_longitude]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[grid_operator]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[energy_coop]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[energy_supplier]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[total_electricity_consumption_companies_kWh_p_yr]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[avg_electricity_consumption_house_kWh_p_yr]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[avg_gas_consumption_house_m3_p_yr]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[total_gas_consumption_companies_m3_p_yr]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[total_cars_houses]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[total_trucks_companies]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[total_vans_companies]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[project_type]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[survey_type]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[hasCongestionPricing]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[p_reloadDatabase]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[p_createCurrentElectricityEA]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[p_runHeadlessAtStartup]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[map_zoomlevel]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[p_local4localBackendUrl]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[p_local4localSession]]></ParameterName>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[Zero_L4L : Simulation]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>5.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Stop at specified time]]></StopOption>
				<InitialDate><![CDATA[1672531200000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1704066300000]]></FinalDate>	
				<FinalTime><![CDATA[8759.75]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>	
	</Experiments>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1728975694741</Id>
			<Name><![CDATA[J_AssetCost]]></Name>
			<Text><![CDATA[
//@lombok.Builder
@lombok.Data
@lombok.experimental.Accessors(fluent = true)
public class J_AssetCost implements Serializable {
	protected J_EA energyAsset;
	protected double CAPEX_eur;
	protected double OPEX_eurpa;
	protected double LCOE_eurpkWh;
	protected double SDE_tariff_eurpkWh;
	protected double depreciationPeriod_y;
	protected double interestRate_r;
	
	protected double SDEincome_eur = 0;
	protected double productionEPEXvalue_eur = 0;
	protected double totalProduction_MWh = 0;
	
	public J_AssetCost(J_EA j_ea, double CAPEX_eur, double OPEX_eurpa, double LCOE_eurpkWh, double SDE_tariff_eurpkWh, double interestRate_r, double depreciationPeriod_y) {
		this.energyAsset = j_ea;
		this.CAPEX_eur = CAPEX_eur;
		this.OPEX_eurpa = OPEX_eurpa;
		this.LCOE_eurpkWh = LCOE_eurpkWh;
		this.SDE_tariff_eurpkWh = SDE_tariff_eurpkWh;
		this.interestRate_r = interestRate_r;
		this.depreciationPeriod_y = depreciationPeriod_y;
	}
	
	public void setSDEincome_eur(double SDEincome_eur) {
		this.SDEincome_eur = SDEincome_eur;
	}
	
	public double getSDEincome_eur() {
		return this.SDEincome_eur;
	}
	
	public void setProductionEPEXvalue_eur(double productionEPEXvalue_eur) {
		this.productionEPEXvalue_eur = productionEPEXvalue_eur;
	}
	
	public double getProductionEPEXvalue_eur() {
		return this.productionEPEXvalue_eur;
	}
	
	public void setTotalProduction_MWh(double totalProduction_MWh) {
		this.totalProduction_MWh = totalProduction_MWh;
	}

	public double getTotalProduction_MWh() {
		return this.totalProduction_MWh;
	}
	
	public double getAvgProductionValue_eurpMWh() {
		return this.productionEPEXvalue_eur / this.totalProduction_MWh;
	}
	
	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;
}
]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1729169820611</Id>
			<Name><![CDATA[J_AccountingLine]]></Name>
			<Text><![CDATA[import java.util.Locale;

@lombok.Value
@lombok.AllArgsConstructor(access = lombok.AccessLevel.PRIVATE)
@lombok.experimental.Accessors(fluent = true)
public final class J_AccountingLine implements Serializable {
	private double quantity_MWh;
	private double price_eurpMWh;
	private double totalPrice_eur;
	
	public static J_AccountingLine fromPricePerMWh(double quantity_MWh, double price_eurpMWh) {
		return new J_AccountingLine(
			quantity_MWh,
			price_eurpMWh,
			quantity_MWh * price_eurpMWh
		);
	}
	
	public static J_AccountingLine fromTotalPrice(double quantity_MWh, double totalPrice_eur) {
		return new J_AccountingLine(
			quantity_MWh,
			totalPrice_eur / quantity_MWh,
			totalPrice_eur
		);
	}
	
	public static J_AccountingLine NaN() {
		return new J_AccountingLine(Double.NaN, Double.NaN, Double.NaN);
	}
	
	public String print() {
		return String.format(
			"%s, tarief %s, waarde: %s",
			printQuantity_MWh(),
			printPrice_eurpMWh(),
			printTotalPrice_eur()
		);
	}
	
	public String printQuantity_MWh() {
		return printValue(quantity_MWh, 0, "MWh");
	}
	
	public String printPrice_eurpMWh() {
		return printValue(price_eurpMWh, 0, "€/MWh");
	}
	
	public String printTotalPrice_eur() {
		return printValue(totalPrice_eur, 0, "€");
	}
	
	public String printPrice_ctpkWh() {
		double price_ctpkWh = price_eurpMWh / 10;
		return printValue(price_ctpkWh, 1, "ct/kWh");
	}
	
	/**
	 * It just so happens that we round all values on whole numbers.
	 */
	private static String printValue(double value, int decimal, String unit) {
		var str = Double.isNaN(value) ? '-' : String.format(Locale.GERMAN, "%,."+ decimal + "f", value);
		
		return str + " " + unit;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;
}



]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1729171880365</Id>
			<Name><![CDATA[J_CoopReport]]></Name>
			<Text><![CDATA[
import lombok.*;

/**
 * @author erik
 *
 * Reports on the simulated results of an Energy Cooperative
 * over a longer period, usually one year.
 */
@lombok.Data
@lombok.experimental.Accessors(fluent = true)
public class J_CoopReport implements Serializable {
	
	J_AccountingLine ownProduction = J_AccountingLine.NaN();
	
	J_AccountingLine selfConsumption = J_AccountingLine.NaN();
	
//	J_AccountingLine selfConsumptionIncFeedin = J_AccountingLine.NaN();
	
	J_AccountingLine EPEXbuy = J_AccountingLine.NaN();
	
	J_AccountingLine EPEXsell = J_AccountingLine.NaN();
	
	J_AccountingLine nonsimultaneousDelivery = J_AccountingLine.NaN();
	
	J_AccountingLine totalDelivery = J_AccountingLine.NaN();
	
	J_AccountingLine reDeliveryFeedIn = J_AccountingLine.NaN();
	
	J_AccountingLine onbalans = J_AccountingLine.NaN();
	
	public String print() {
		var result = "";
		result += "Totale opwek Coöperatie Assets: " + ownProduction.print() + "\n";
		
		
		return result;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
	</JavaClasses>
	<ModelResources>
		<Resource>
			<Path><![CDATA[data_Generic/db_profiles.xlsx]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_L4L/Buildings_L4L.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_L4L/GridNodes_L4L.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_L4L/Neighbourhoods_L4L.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[logo_zenmo.png]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[../interface_loader/lombok.jar]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[noun-solarfarm.png]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[noun-windmill.png]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[noun-house.png]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/AlbatrossProcessedVehicleTrips.xlsx]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/inputECookerPatterns.xlsx]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/inputTruckTripPatterns.xlsx]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[data_Generic/Laadprofielen_standaard.xlsx]]></Path>
			<ReferencedFromUserCode>true</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[local4local-client.jar]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
		<Resource>
			<Path><![CDATA[L4L_LOGO.png]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
			<Location>FILE_SYSTEM</Location>
		</Resource>
	</ModelResources>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[zero_engine]]></LibraryName>
		<VersionMajor>0</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[zerointerfaceloader]]></LibraryName>
		<VersionMajor>0</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[digital_twin_results]]></LibraryName>
		<VersionMajor>0</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
	<ClassPathEntry>
		<ResourceReference>
			<PackageName><![CDATA[zerol4l]]></PackageName>
			<ClassName><![CDATA[../interface_loader/lombok.jar]]></ClassName>
		</ResourceReference>
		<Imported>false</Imported>
		<Folder>false</Folder>
	</ClassPathEntry>
	<ClassPathEntry>
		<ResourceReference>
			<PackageName><![CDATA[zerol4l]]></PackageName>
			<ClassName><![CDATA[local4local-client.jar]]></ClassName>
		</ResourceReference>
		<Imported>true</Imported>
		<Folder>false</Folder>
	</ClassPathEntry>
	<CloudModelUuid><![CDATA[b9f2137d-b8cc-462f-85a4-fb2379f0eb39]]></CloudModelUuid>
</Model>
</AnyLogicWorkspace>

services:
    npm-base:
        image: node:22
        working_dir: /webtool/frontend
        volumes:
            - .:/webtool
        command: ["npm", "install"]

    frontend:
        extends:
            service: npm-base
        command: ["npm", "run", "dev"]
        environment:
            VITE_BACKEND_URL: http://localhost:9000
            # This is an input parameter for the AnyLogic model.
            # The model will use this URL to connect to the webtool backend.
            # To use a locally running webtool with AnyLogic Cloud this needs to be a publicly routable address.
            VITE_ANYLOGIC_CALLBACK_URL: https://56d8-62-195-188-155.ngrok-free.app
        ports:
            - "127.0.0.1:5173:5173"

    postgres:
        image: postgres:16
        environment:
            POSTGRES_USER: webtool
            POSTGRES_PASSWORD: webtool

    # base services and for one-off commands
    gradle-base:
        image: gradle:8.9
        working_dir: /home/gradle/project
        user: gradle
        volumes:
            - ./gradle:/home/gradle/project
            - gradle-base-home:/home/gradle/.gradle

    gradle-js:
        extends:
            service: gradle-base
        command: ["gradle", "--project-cache-dir=/tmp/gradle", "--no-daemon", "common:jsBrowserProductionLibraryDistribution"]
        volumes:
            - gradle-js-home:/home/gradle/.gradle

    gradle-client-shadowjar:
        extends:
            service: gradle-base
        image: gradle:8.9-jdk17
        command: [ "gradle", "--project-cache-dir=/tmp/gradle", "--no-daemon", "client:shadowJar" ]
        volumes:
            - gradle-client-shadowjar-home:/home/gradle/.gradle

    backend:
        extends:
            service: gradle-base
        command: ["gradle", "--project-cache-dir=/tmp/gradle", "backend:run"]
        ports:
            -   target: 9000
                published: 9000
        volumes:
            - gradle-backend-home:/home/gradle/.gradle

    # To connect from remote AnyLogic cloud to locally running backend.
    # Somehow only works with run and not with up.
    ngrok:
        image: ngrok/ngrok
        command:
            -   http
            -   backend:9000
        env_file:
            -   ngrok.env
        ports:
            - "4040:4040"

    client-test:
        extends:
            service: gradle-base
        command: ["gradle", "--project-cache-dir=/tmp/gradle", "--no-daemon", "client:test"]
        depends_on:
            -   backend
        environment:
            LOCAL4LOCAL_BACKEND_URL: http://backend:9000
        volumes:
            - gradle-client-test-home:/home/gradle/.gradle

volumes:
    gradle-base-home:
    gradle-js-home:
    gradle-backend-home:
    gradle-client-test-home:
    gradle-client-shadowjar-home:
